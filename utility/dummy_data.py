import json

metadata = {
    "amalfi-artifact": {
        "createdAt": "2022-01-06T13:51:27Z",
        "pushedAt": "2022-01-25T10:48:16Z",
        "updatedAt": "2024-03-13T10:19:16Z",
        "archivedAt": None,
        "description": "Artifact accompanying our ICSE '22 paper \"Practical Automated Detection of Malicious npm Packages\"",
        "forkCount": 8,
        "stargazerCount": 32,
        "hasDiscussionsEnabled": False,
        "hasIssuesEnabled": True,
        "hasProjectsEnabled": True,
        "hasSponsorshipsEnabled": False,
        "fundingLinks": [],
        "hasWikiEnabled": True,
        "homepageUrl": None,
        "isArchived": False,
        "isEmpty": False,
        "isFork": False,
        "isInOrganization": True,
        "isLocked": False,
        "isMirror": False,
        "isPrivate": False,
        "isTemplate": False,
        "licenseInfo": {
            "name": "MIT License",
            "body": "MIT License\n\nCopyright (c) [year] [fullname]\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
            "description": "A short and simple permissive license with conditions only requiring preservation of copyright and license notices. Licensed works, modifications, and larger works may be distributed under different terms and without source code."
        },
        "lockReason": None,
        "visibility": "PUBLIC",
        "url": "https://github.com/githubnext/amalfi-artifact",
        "owner": {
            "login": "githubnext"
        },
        "resourcePath": "/githubnext/amalfi-artifact",
        "diskUsage": 3736,
        "languages": {
            "nodes": [
                {
                    "name": "Python"
                },
                {
                    "name": "Shell"
                }
            ]
        },
        "primaryLanguage": {
            "name": "Python"
        }
    },
    "data_driven_infer": {
        "createdAt": "2023-02-13T15:34:29Z",
        "pushedAt": "2023-05-09T08:31:33Z",
        "updatedAt": "2023-08-19T05:05:27Z",
        "archivedAt": None,
        "description": "This repository includes the implementation for the paper \"Learning to Boost Disjunctive Static Bug-Finders.\"It improves the efficiency of the disjunctive static analyzer, Infer, by a machine-learning technique.",
        "forkCount": 1,
        "stargazerCount": 4,
        "hasDiscussionsEnabled": False,
        "hasIssuesEnabled": True,
        "hasProjectsEnabled": True,
        "hasSponsorshipsEnabled": False,
        "fundingLinks": [],
        "hasWikiEnabled": False,
        "homepageUrl": "",
        "isArchived": False,
        "isEmpty": False,
        "isFork": False,
        "isInOrganization": True,
        "isLocked": False,
        "isMirror": False,
        "isPrivate": False,
        "isTemplate": False,
        "licenseInfo": {
            "name": "Other",
            "body": "",
            "description": None
        },
        "lockReason": None,
        "visibility": "PUBLIC",
        "url": "https://github.com/facebookresearch/data_driven_infer",
        "owner": {
            "login": "facebookresearch"
        },
        "resourcePath": "/facebookresearch/data_driven_infer",
        "diskUsage": 66,
        "languages": {
            "nodes": [
                {
                    "name": "Shell"
                },
                {
                    "name": "Python"
                },
                {
                    "name": "JavaScript"
                }
            ]
        },
        "primaryLanguage": {
            "name": "Python"
        }
    },
    "TDD-Hangman": {
        "createdAt": "2023-10-07T10:24:24Z",
        "pushedAt": "2023-10-07T10:25:13Z",
        "updatedAt": "2023-10-07T10:25:20Z",
        "archivedAt": None,
        "description": "This is a simple hangman game. It was built collaboratively using test-driven development, Kanban methodology and Git feature branch workflow, with pull requests and peer reviews.",
        "forkCount": 0,
        "stargazerCount": 0,
        "hasDiscussionsEnabled": False,
        "hasIssuesEnabled": True,
        "hasProjectsEnabled": True,
        "hasSponsorshipsEnabled": False,
        "fundingLinks": [],
        "hasWikiEnabled": True,
        "homepageUrl": None,
        "isArchived": False,
        "isEmpty": False,
        "isFork": False,
        "isInOrganization": False,
        "isLocked": False,
        "isMirror": False,
        "isPrivate": False,
        "isTemplate": False,
        "licenseInfo": None,
        "lockReason": None,
        "visibility": "PUBLIC",
        "url": "https://github.com/SamuelThand/TDD-Hangman",
        "owner": {
            "login": "SamuelThand"
        },
        "resourcePath": "/SamuelThand/TDD-Hangman",
        "diskUsage": 261,
        "languages": {
            "nodes": [
                {
                    "name": "Python"
                }
            ]
        },
        "primaryLanguage": {
            "name": "Python"
        }
    }
}

git = {
    "amalfi-artifact": {
        "total_commits": 1,
        "developers": [
            "asejfia"
        ],
        "developer_count": 1,
        "lines_added": 453664,
        "lines_deleted": 0,
        "files_modified": 108,
        "average_lines_added_per_commit": 453664.0,
        "average_lines_deleted_per_commit": 0.0,
        "lines_count": {
            "added": {},
            "removed": {}
        },
        "hunks_count": {},
        "contributors_experience": {},
        "contributors_count": {
            "total": {},
            "minor": {}
        },
        "code_churn": {
            "total": {},
            "max": {},
            "avg": {}
        },
        "change_set_max": 0,
        "change_set_avg": 0,
        "repo": "amalfi-artifact",
        "repo_url": "https://github.com/githubnext/amalfi-artifact"
    },
    "data_driven_infer": {
        "total_commits": 1,
        "developers": [
            "Yoonseok Ko"
        ],
        "developer_count": 1,
        "lines_added": 6757,
        "lines_deleted": 0,
        "files_modified": 41,
        "average_lines_added_per_commit": 6757.0,
        "average_lines_deleted_per_commit": 0.0,
        "lines_count": {
            "added": {},
            "removed": {}
        },
        "hunks_count": {},
        "contributors_experience": {},
        "contributors_count": {
            "total": {},
            "minor": {}
        },
        "code_churn": {
            "total": {},
            "max": {},
            "avg": {}
        },
        "change_set_max": 0,
        "change_set_avg": 0,
        "repo": "data_driven_infer",
        "repo_url": "https://github.com/facebookresearch/data_driven_infer"
    },
    "TDD-Hangman": {
        "total_commits": 84,
        "developers": [
            "Samuel Thand",
            "toha2102",
            "Tobias Hansson"
        ],
        "developer_count": 3,
        "lines_added": 2332,
        "lines_deleted": 1165,
        "files_modified": 118,
        "average_lines_added_per_commit": 27.761904761904763,
        "average_lines_deleted_per_commit": 13.869047619047619,
        "lines_count": {
            "added": {},
            "removed": {}
        },
        "hunks_count": {},
        "contributors_experience": {},
        "contributors_count": {
            "total": {},
            "minor": {}
        },
        "code_churn": {
            "total": {},
            "max": {},
            "avg": {}
        },
        "change_set_max": 0,
        "change_set_avg": 0,
        "repo": "TDD-Hangman",
        "repo_url": "https://github.com/SamuelThand/TDD-Hangman"
    }
}

lint = {
    "amalfi-artifact": {
        "9d15930a52dd1949615005dce240bb628cec7860": {
            "messages": {
                "hash_package": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\clone-detector\\hash_package.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 3,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "'hash_package' is too complex. The McCabe rating is 4",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\clone-detector\\hash_package.py"
                                    },
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 3",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\clone-detector\\hash_package.py"
                                    }
                                ],
                                "R1732": [
                                    {
                                        "symbol": "consider-using-with",
                                        "msg": "Consider using 'with' for resource-allocating operations",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\clone-detector\\hash_package.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 2,
                            "message_ids": {
                                "W1514": [
                                    {
                                        "symbol": "unspecified-encoding",
                                        "msg": "Using open without explicitly specifying an encoding",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\clone-detector\\hash_package.py"
                                    }
                                ],
                                "W1309": [
                                    {
                                        "symbol": "f-string-without-interpolation",
                                        "msg": "Using an f-string that does not have any interpolated variables",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\clone-detector\\hash_package.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "train_classifier": {
                    "total_messages": 45,
                    "categories": {
                        "convention": {
                            "total": 20,
                            "message_ids": {
                                "C0303": [
                                    {
                                        "symbol": "trailing-whitespace",
                                        "msg": "Trailing whitespace",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\train_classifier.py"
                                    },
                                    {
                                        "symbol": "trailing-whitespace",
                                        "msg": "Trailing whitespace",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\train_classifier.py"
                                    },
                                    {
                                        "symbol": "trailing-whitespace",
                                        "msg": "Trailing whitespace",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\train_classifier.py"
                                    },
                                    {
                                        "symbol": "trailing-whitespace",
                                        "msg": "Trailing whitespace",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\train_classifier.py"
                                    }
                                ],
                                "C0301": [
                                    {
                                        "symbol": "line-too-long",
                                        "msg": "Line too long (167/150)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\train_classifier.py"
                                    },
                                    {
                                        "symbol": "line-too-long",
                                        "msg": "Line too long (156/150)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\train_classifier.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\train_classifier.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\train_classifier.py"
                                    }
                                ],
                                "C0121": [
                                    {
                                        "symbol": "singleton-comparison",
                                        "msg": "Comparison 'exclude_features == None' should be 'exclude_features is None'",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\train_classifier.py"
                                    },
                                    {
                                        "symbol": "singleton-comparison",
                                        "msg": "Comparison 'leave_out == None' should be 'leave_out is None'",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\train_classifier.py"
                                    },
                                    {
                                        "symbol": "singleton-comparison",
                                        "msg": "Comparison 'randomize == True' should be 'randomize is True' if checking for the singleton value True, or 'bool(randomize)' if testing for truthiness",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\train_classifier.py"
                                    },
                                    {
                                        "symbol": "singleton-comparison",
                                        "msg": "Comparison 'randomize == True' should be 'randomize is True' if checking for the singleton value True, or 'randomize' if testing for truthiness",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\train_classifier.py"
                                    }
                                ],
                                "C0201": [
                                    {
                                        "symbol": "consider-iterating-dictionary",
                                        "msg": "Consider iterating the dictionary directly instead of calling .keys()",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\train_classifier.py"
                                    }
                                ],
                                "C2801": [
                                    {
                                        "symbol": "unnecessary-dunder-call",
                                        "msg": "Unnecessarily calls dunder method __next__. Use next built-in function.",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\train_classifier.py"
                                    }
                                ],
                                "C0200": [
                                    {
                                        "symbol": "consider-using-enumerate",
                                        "msg": "Consider using enumerate instead of iterating with range and len",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\train_classifier.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Constant name \"booleanize\" doesn't conform to UPPER_CASE naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\train_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Constant name \"hashing\" doesn't conform to UPPER_CASE naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\train_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Constant name \"positive\" doesn't conform to UPPER_CASE naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\train_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Constant name \"randomize\" doesn't conform to UPPER_CASE naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\train_classifier.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"timeit.default_timer\" should be placed before third party imports \"graphviz.Source\", \"sklearn.tree\", \"sklearn.naive_bayes\", \"sklearn.svm\", \"sklearn.ensemble.RandomForestClassifier\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\train_classifier.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 11,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "'train_classifier' is too complex. The McCabe rating is 37",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\train_classifier.py"
                                    },
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\train_classifier.py"
                                    }
                                ],
                                "R0913": [
                                    {
                                        "symbol": "too-many-arguments",
                                        "msg": "Too many arguments (15/5)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\train_classifier.py"
                                    }
                                ],
                                "R0914": [
                                    {
                                        "symbol": "too-many-locals",
                                        "msg": "Too many local variables (58/15)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\train_classifier.py"
                                    }
                                ],
                                "R1722": [
                                    {
                                        "symbol": "consider-using-sys-exit",
                                        "msg": "Consider using 'sys.exit' instead",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\train_classifier.py"
                                    }
                                ],
                                "R0912": [
                                    {
                                        "symbol": "too-many-branches",
                                        "msg": "Too many branches (38/12)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\train_classifier.py"
                                    }
                                ],
                                "R0915": [
                                    {
                                        "symbol": "too-many-statements",
                                        "msg": "Too many statements (106/50)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\train_classifier.py"
                                    }
                                ],
                                "R1719": [
                                    {
                                        "symbol": "simplifiable-if-expression",
                                        "msg": "The if expression can be replaced with 'test'",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\train_classifier.py"
                                    },
                                    {
                                        "symbol": "simplifiable-if-expression",
                                        "msg": "The if expression can be replaced with 'test'",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\train_classifier.py"
                                    },
                                    {
                                        "symbol": "simplifiable-if-expression",
                                        "msg": "The if expression can be replaced with 'test'",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\train_classifier.py"
                                    },
                                    {
                                        "symbol": "simplifiable-if-expression",
                                        "msg": "The if expression can be replaced with 'test'",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\train_classifier.py"
                                    }
                                ]
                            }
                        },
                        "error": {
                            "total": 5,
                            "message_ids": {
                                "E0401": [
                                    {
                                        "symbol": "import-error",
                                        "msg": "Unable to import 'graphviz'",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\train_classifier.py"
                                    },
                                    {
                                        "symbol": "import-error",
                                        "msg": "Unable to import 'sklearn'",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\train_classifier.py"
                                    },
                                    {
                                        "symbol": "import-error",
                                        "msg": "Unable to import 'sklearn'",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\train_classifier.py"
                                    },
                                    {
                                        "symbol": "import-error",
                                        "msg": "Unable to import 'sklearn'",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\train_classifier.py"
                                    },
                                    {
                                        "symbol": "import-error",
                                        "msg": "Unable to import 'sklearn.ensemble'",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\train_classifier.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 9,
                            "message_ids": {
                                "W0621": [
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'booleanize' from outer scope (line 226)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\train_classifier.py"
                                    },
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'hashing' from outer scope (line 227)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\train_classifier.py"
                                    },
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'positive' from outer scope (line 228)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\train_classifier.py"
                                    },
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'randomize' from outer scope (line 229)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\train_classifier.py"
                                    },
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'until' from outer scope (line 230)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\train_classifier.py"
                                    }
                                ],
                                "W1514": [
                                    {
                                        "symbol": "unspecified-encoding",
                                        "msg": "Using open without explicitly specifying an encoding",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\train_classifier.py"
                                    },
                                    {
                                        "symbol": "unspecified-encoding",
                                        "msg": "Using open without explicitly specifying an encoding",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\train_classifier.py"
                                    },
                                    {
                                        "symbol": "unspecified-encoding",
                                        "msg": "Using open without explicitly specifying an encoding",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\train_classifier.py"
                                    },
                                    {
                                        "symbol": "unspecified-encoding",
                                        "msg": "Using open without explicitly specifying an encoding",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\train_classifier.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "util": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\util.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\util.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\util.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "'version_date' is too complex. The McCabe rating is 3",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\util.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W1514": [
                                    {
                                        "symbol": "unspecified-encoding",
                                        "msg": "Using open without explicitly specifying an encoding",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\amalfi-artifact\\code\\training\\util.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 9.8,
                "repository_name": "amalfi-artifact"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 4,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 0,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "hash_package": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 3,
                        "statement": 25,
                        "warning": 2
                    },
                    "train_classifier": {
                        "convention": 20,
                        "error": 5,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 11,
                        "statement": 150,
                        "warning": 9
                    },
                    "util": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 17,
                        "warning": 1
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 3,
                    "too-complex": 5,
                    "consider-using-with": 1,
                    "unspecified-encoding": 6,
                    "f-string-without-interpolation": 1,
                    "trailing-whitespace": 4,
                    "line-too-long": 2,
                    "import-error": 5,
                    "missing-function-docstring": 3,
                    "too-many-arguments": 1,
                    "too-many-locals": 1,
                    "redefined-outer-name": 5,
                    "singleton-comparison": 4,
                    "consider-iterating-dictionary": 1,
                    "unnecessary-dunder-call": 1,
                    "consider-using-enumerate": 1,
                    "consider-using-sys-exit": 1,
                    "too-many-branches": 1,
                    "too-many-statements": 1,
                    "invalid-name": 4,
                    "simplifiable-if-expression": 4,
                    "wrong-import-order": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 24,
                "dependencies": {
                    "util": [
                        "train_classifier"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 5,
                "fatal": 0,
                "global_note": 6.041666666666667,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 4,
                    "klass": 0,
                    "method": 0,
                    "module": 3
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 15,
                "statement": 192,
                "undocumented": {
                    "function": 3,
                    "klass": 0,
                    "method": 0,
                    "module": 3
                },
                "warning": 12,
                "avg_mccabe_complexity": 9.8,
                "repository_name": "amalfi-artifact"
            },
            "date": "2022-01-25 10:46:59+00:00"
        }
    },
    "data_driven_infer": {
        "92f63bd26dd583a5d24bf1a17eba552a917a74a4": {
            "messages": {
                "DDInfer": {
                    "total_messages": 68,
                    "categories": {
                        "warning": {
                            "total": 41,
                            "message_ids": {
                                "W0311": [
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 3 spaces, expected 4",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 3 spaces, expected 4",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 7 spaces, expected 8",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 7 spaces, expected 8",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 15 spaces, expected 16",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 15 spaces, expected 16",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 15 spaces, expected 16",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 7 spaces, expected 8",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 3 spaces, expected 4",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 7 spaces, expected 8",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 7 spaces, expected 8",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    }
                                ],
                                "W1401": [
                                    {
                                        "symbol": "anomalous-backslash-in-string",
                                        "msg": "Anomalous backslash in string: '\\.'. String constant might be missing an r prefix.",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    }
                                ],
                                "W0702": [
                                    {
                                        "symbol": "bare-except",
                                        "msg": "No exception type(s) specified",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    }
                                ],
                                "W1514": [
                                    {
                                        "symbol": "unspecified-encoding",
                                        "msg": "Using open without explicitly specifying an encoding",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    }
                                ],
                                "W0621": [
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'pre_k' from outer scope (line 12)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'pre_k' from outer scope (line 12)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'main_k' from outer scope (line 13)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'target_path' from outer scope (line 100)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'model_path' from outer scope (line 99)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    }
                                ],
                                "W0612": [
                                    {
                                        "symbol": "unused-variable",
                                        "msg": "Unused variable 'alarms'",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    }
                                ]
                            }
                        },
                        "convention": {
                            "total": 15,
                            "message_ids": {
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"DDInfer\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Constant name \"mode\" doesn't conform to UPPER_CASE naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Constant name \"m\" doesn't conform to UPPER_CASE naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Constant name \"pre_k\" doesn't conform to UPPER_CASE naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Constant name \"main_k\" doesn't conform to UPPER_CASE naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    }
                                ],
                                "C0410": [
                                    {
                                        "symbol": "multiple-imports",
                                        "msg": "Multiple imports on one line (sys, os)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 11,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "'run_infer' is too complex. The McCabe rating is 6",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "too-complex",
                                        "msg": "'pre_analysis' is too complex. The McCabe rating is 4",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    }
                                ],
                                "R0914": [
                                    {
                                        "symbol": "too-many-locals",
                                        "msg": "Too many local variables (18/15)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    }
                                ],
                                "R1722": [
                                    {
                                        "symbol": "consider-using-sys-exit",
                                        "msg": "Consider using 'sys.exit' instead",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "consider-using-sys-exit",
                                        "msg": "Consider using 'sys.exit' instead",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "consider-using-sys-exit",
                                        "msg": "Consider using 'sys.exit' instead",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    },
                                    {
                                        "symbol": "consider-using-sys-exit",
                                        "msg": "Consider using 'sys.exit' instead",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    }
                                ],
                                "R1732": [
                                    {
                                        "symbol": "consider-using-with",
                                        "msg": "Consider using 'with' for resource-allocating operations",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    }
                                ]
                            }
                        },
                        "error": {
                            "total": 1,
                            "message_ids": {
                                "E0602": [
                                    {
                                        "symbol": "undefined-variable",
                                        "msg": "Undefined variable 'p'",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\bin\\DDInfer.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "collect": {
                    "total_messages": 64,
                    "categories": {
                        "convention": {
                            "total": 39,
                            "message_ids": {
                                "C0303": [
                                    {
                                        "symbol": "trailing-whitespace",
                                        "msg": "Trailing whitespace",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    },
                                    {
                                        "symbol": "trailing-whitespace",
                                        "msg": "Trailing whitespace",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    }
                                ],
                                "C0325": [
                                    {
                                        "symbol": "superfluous-parens",
                                        "msg": "Unnecessary parens after 'if' keyword",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    },
                                    {
                                        "symbol": "superfluous-parens",
                                        "msg": "Unnecessary parens after '=' keyword",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    }
                                ],
                                "C0301": [
                                    {
                                        "symbol": "line-too-long",
                                        "msg": "Line too long (156/150)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    }
                                ],
                                "C0410": [
                                    {
                                        "symbol": "multiple-imports",
                                        "msg": "Multiple imports on one line (sys, os)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Constant name \"training_data_folder\" doesn't conform to UPPER_CASE naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Constant name \"filename\" doesn't conform to UPPER_CASE naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Constant name \"trials\" doesn't conform to UPPER_CASE naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Constant name \"training_data_folder\" doesn't conform to UPPER_CASE naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"X\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Argument name \"X\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Argument name \"X\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Argument name \"X\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Argument name \"X\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Argument name \"X\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Argument name \"X\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"train_X\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"train_X\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"train_X\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Constant name \"mode\" doesn't conform to UPPER_CASE naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Constant name \"path\" doesn't conform to UPPER_CASE naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    }
                                ],
                                "C1803": [
                                    {
                                        "symbol": "use-implicit-booleaness-not-comparison",
                                        "msg": "\"train_X == []\" can be simplified to \"not train_X\", if it is strictly a sequence, as an empty list is Falsey",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"pickle\" should be placed before third party imports \"numpy\", \"sklearn\", \"sklearn.ensemble.GradientBoostingClassifier\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    },
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"itertools\" should be placed before third party imports \"numpy\", \"sklearn\", \"sklearn.ensemble.GradientBoostingClassifier\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    },
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"sys\" should be placed before third party imports \"numpy\", \"sklearn\", \"sklearn.ensemble.GradientBoostingClassifier\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    },
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"os\" should be placed before third party imports \"numpy\", \"sklearn\", \"sklearn.ensemble.GradientBoostingClassifier\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    },
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"time\" should be placed before third party imports \"numpy\", \"sklearn\", \"sklearn.ensemble.GradientBoostingClassifier\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    },
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"random\" should be placed before third party imports \"numpy\", \"sklearn\", \"sklearn.ensemble.GradientBoostingClassifier\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 13,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 3",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    },
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    },
                                    {
                                        "symbol": "too-complex",
                                        "msg": "'read_file' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    },
                                    {
                                        "symbol": "too-complex",
                                        "msg": "'unique_sorted' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    },
                                    {
                                        "symbol": "too-complex",
                                        "msg": "'trim_data' is too complex. The McCabe rating is 3",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    },
                                    {
                                        "symbol": "too-complex",
                                        "msg": "'model' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    },
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    },
                                    {
                                        "symbol": "too-complex",
                                        "msg": "'train' is too complex. The McCabe rating is 6",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    }
                                ],
                                "R1722": [
                                    {
                                        "symbol": "consider-using-sys-exit",
                                        "msg": "Consider using 'sys.exit' instead",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    },
                                    {
                                        "symbol": "consider-using-sys-exit",
                                        "msg": "Consider using 'sys.exit' instead",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    }
                                ],
                                "R1732": [
                                    {
                                        "symbol": "consider-using-with",
                                        "msg": "Consider using 'with' for resource-allocating operations",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    },
                                    {
                                        "symbol": "consider-using-with",
                                        "msg": "Consider using 'with' for resource-allocating operations",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    }
                                ],
                                "R1724": [
                                    {
                                        "symbol": "no-else-continue",
                                        "msg": "Unnecessary \"else\" after \"continue\", remove the \"else\" and de-indent the code inside it",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    }
                                ]
                            }
                        },
                        "error": {
                            "total": 2,
                            "message_ids": {
                                "E0401": [
                                    {
                                        "symbol": "import-error",
                                        "msg": "Unable to import 'sklearn'",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    },
                                    {
                                        "symbol": "import-error",
                                        "msg": "Unable to import 'sklearn.ensemble'",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 10,
                            "message_ids": {
                                "W1514": [
                                    {
                                        "symbol": "unspecified-encoding",
                                        "msg": "Using open without explicitly specifying an encoding",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    },
                                    {
                                        "symbol": "unspecified-encoding",
                                        "msg": "Using open without explicitly specifying an encoding",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    }
                                ],
                                "W0621": [
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'f' from outer scope (line 34)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    },
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'path' from outer scope (line 151)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    },
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'pgms' from outer scope (line 36)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    },
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'k' from outer scope (line 26)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    }
                                ],
                                "W0108": [
                                    {
                                        "symbol": "unnecessary-lambda",
                                        "msg": "Lambda may not be necessary",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    }
                                ],
                                "W0612": [
                                    {
                                        "symbol": "unused-variable",
                                        "msg": "Unused variable 'total_time'",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    },
                                    {
                                        "symbol": "unused-variable",
                                        "msg": "Unused variable 'elapsed_time'",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import sklearn",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\collect.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "eval_ml_infer": {
                    "total_messages": 24,
                    "categories": {
                        "convention": {
                            "total": 8,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\eval_ml_infer.py"
                                    }
                                ],
                                "C0410": [
                                    {
                                        "symbol": "multiple-imports",
                                        "msg": "Multiple imports on one line (sys, os)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\eval_ml_infer.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\eval_ml_infer.py"
                                    }
                                ],
                                "C0121": [
                                    {
                                        "symbol": "singleton-comparison",
                                        "msg": "Comparison 'model != None' should be 'model is not None'",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\eval_ml_infer.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Constant name \"pgm\" doesn't conform to UPPER_CASE naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\eval_ml_infer.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Constant name \"model\" doesn't conform to UPPER_CASE naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\eval_ml_infer.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Constant name \"filename\" doesn't conform to UPPER_CASE naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\eval_ml_infer.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Constant name \"path\" doesn't conform to UPPER_CASE naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\eval_ml_infer.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 9,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "'run' is too complex. The McCabe rating is 6",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\eval_ml_infer.py"
                                    },
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 3",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\eval_ml_infer.py"
                                    },
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'for' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\eval_ml_infer.py"
                                    }
                                ],
                                "R0914": [
                                    {
                                        "symbol": "too-many-locals",
                                        "msg": "Too many local variables (16/15)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\eval_ml_infer.py"
                                    }
                                ],
                                "R1722": [
                                    {
                                        "symbol": "consider-using-sys-exit",
                                        "msg": "Consider using 'sys.exit' instead",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\eval_ml_infer.py"
                                    },
                                    {
                                        "symbol": "consider-using-sys-exit",
                                        "msg": "Consider using 'sys.exit' instead",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\eval_ml_infer.py"
                                    },
                                    {
                                        "symbol": "consider-using-sys-exit",
                                        "msg": "Consider using 'sys.exit' instead",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\eval_ml_infer.py"
                                    }
                                ],
                                "R1732": [
                                    {
                                        "symbol": "consider-using-with",
                                        "msg": "Consider using 'with' for resource-allocating operations",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\eval_ml_infer.py"
                                    },
                                    {
                                        "symbol": "consider-using-with",
                                        "msg": "Consider using 'with' for resource-allocating operations",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\eval_ml_infer.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 7,
                            "message_ids": {
                                "W0621": [
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'path' from outer scope (line 61)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\eval_ml_infer.py"
                                    },
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'k' from outer scope (line 46)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\eval_ml_infer.py"
                                    },
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'model' from outer scope (line 47)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\eval_ml_infer.py"
                                    },
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'f' from outer scope (line 63)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\eval_ml_infer.py"
                                    }
                                ],
                                "W0702": [
                                    {
                                        "symbol": "bare-except",
                                        "msg": "No exception type(s) specified",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\eval_ml_infer.py"
                                    }
                                ],
                                "W1514": [
                                    {
                                        "symbol": "unspecified-encoding",
                                        "msg": "Using open without explicitly specifying an encoding",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\eval_ml_infer.py"
                                    },
                                    {
                                        "symbol": "unspecified-encoding",
                                        "msg": "Using open without explicitly specifying an encoding",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\eval_ml_infer.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "infer": {
                    "total_messages": 113,
                    "categories": {
                        "warning": {
                            "total": 70,
                            "message_ids": {
                                "W0311": [
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 3 spaces, expected 4",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 3 spaces, expected 4",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 7 spaces, expected 8",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 7 spaces, expected 8",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 7 spaces, expected 8",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 15 spaces, expected 16",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 15 spaces, expected 16",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 15 spaces, expected 16",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 7 spaces, expected 8",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 3 spaces, expected 4",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 7 spaces, expected 8",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 7 spaces, expected 8",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 3 spaces, expected 4",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 3 spaces, expected 4",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 7 spaces, expected 8",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 7 spaces, expected 8",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 7 spaces, expected 8",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 15 spaces, expected 16",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 15 spaces, expected 16",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 15 spaces, expected 16",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 15 spaces, expected 16",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 15 spaces, expected 16",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 11 spaces, expected 12",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 7 spaces, expected 8",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 3 spaces, expected 4",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 7 spaces, expected 8",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 7 spaces, expected 8",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    }
                                ],
                                "W0702": [
                                    {
                                        "symbol": "bare-except",
                                        "msg": "No exception type(s) specified",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "bare-except",
                                        "msg": "No exception type(s) specified",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    }
                                ],
                                "W1514": [
                                    {
                                        "symbol": "unspecified-encoding",
                                        "msg": "Using open without explicitly specifying an encoding",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "unspecified-encoding",
                                        "msg": "Using open without explicitly specifying an encoding",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    }
                                ],
                                "W0612": [
                                    {
                                        "symbol": "unused-variable",
                                        "msg": "Unused variable 'alarms'",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused Queue imported from multiprocessing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    }
                                ]
                            }
                        },
                        "convention": {
                            "total": 18,
                            "message_ids": {
                                "C0301": [
                                    {
                                        "symbol": "line-too-long",
                                        "msg": "Line too long (195/150)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "line-too-long",
                                        "msg": "Line too long (165/150)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    }
                                ],
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    }
                                ],
                                "C0410": [
                                    {
                                        "symbol": "multiple-imports",
                                        "msg": "Multiple imports on one line (sys, os)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    }
                                ],
                                "C0121": [
                                    {
                                        "symbol": "singleton-comparison",
                                        "msg": "Comparison 'model != None' should be 'model is not None'",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 25,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "'run_random_infer' is too complex. The McCabe rating is 6",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "too-complex",
                                        "msg": "'run_infer' is too complex. The McCabe rating is 8",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "too-complex",
                                        "msg": "'work' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "too-complex",
                                        "msg": "'run_infer_parallel' is too complex. The McCabe rating is 6",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "too-complex",
                                        "msg": "'pre_analysis' is too complex. The McCabe rating is 4",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "too-complex",
                                        "msg": "'work_dd' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "too-complex",
                                        "msg": "'run_dd_infer_parallel' is too complex. The McCabe rating is 6",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "too-complex",
                                        "msg": "'work_random' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "too-complex",
                                        "msg": "'run_random_infer_parallel' is too complex. The McCabe rating is 6",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    }
                                ],
                                "R0914": [
                                    {
                                        "symbol": "too-many-locals",
                                        "msg": "Too many local variables (16/15)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "too-many-locals",
                                        "msg": "Too many local variables (22/15)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "too-many-locals",
                                        "msg": "Too many local variables (19/15)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "too-many-locals",
                                        "msg": "Too many local variables (23/15)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "too-many-locals",
                                        "msg": "Too many local variables (18/15)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    }
                                ],
                                "R1722": [
                                    {
                                        "symbol": "consider-using-sys-exit",
                                        "msg": "Consider using 'sys.exit' instead",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "consider-using-sys-exit",
                                        "msg": "Consider using 'sys.exit' instead",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    }
                                ],
                                "R1732": [
                                    {
                                        "symbol": "consider-using-with",
                                        "msg": "Consider using 'with' for resource-allocating operations",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "consider-using-with",
                                        "msg": "Consider using 'with' for resource-allocating operations",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    }
                                ],
                                "R0913": [
                                    {
                                        "symbol": "too-many-arguments",
                                        "msg": "Too many arguments (7/5)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "too-many-arguments",
                                        "msg": "Too many arguments (6/5)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "too-many-arguments",
                                        "msg": "Too many arguments (7/5)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "too-many-arguments",
                                        "msg": "Too many arguments (6/5)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "too-many-arguments",
                                        "msg": "Too many arguments (6/5)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "too-many-arguments",
                                        "msg": "Too many arguments (8/5)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    },
                                    {
                                        "symbol": "too-many-arguments",
                                        "msg": "Too many arguments (8/5)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\infer.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "learn_classifier": {
                    "total_messages": 217,
                    "categories": {
                        "warning": {
                            "total": 55,
                            "message_ids": {
                                "W0311": [
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 7 spaces, expected 8",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 7 spaces, expected 8",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 7 spaces, expected 8",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "bad-indentation",
                                        "msg": "Bad indentation. Found 7 spaces, expected 8",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    }
                                ],
                                "W0401": [
                                    {
                                        "symbol": "wildcard-import",
                                        "msg": "Wildcard import infer",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    }
                                ],
                                "W0621": [
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'filename' from outer scope (line 487)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'clf' from outer scope (line 47)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'filename' from outer scope (line 487)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'classifiers' from outer scope (line 40)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'clf' from outer scope (line 47)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'classifiers' from outer scope (line 40)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'result' from outer scope (line 504)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'clf' from outer scope (line 47)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'f' from outer scope (line 488)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'data_files' from outer scope (line 493)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'clf' from outer scope (line 47)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'clf' from outer scope (line 47)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'clf' from outer scope (line 47)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'data_files' from outer scope (line 493)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'folder_to_save_models' from outer scope (line 484)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'b_eval' from outer scope (line 502)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'result' from outer scope (line 504)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'clf' from outer scope (line 47)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'pgms' from outer scope (line 490)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'p' from outer scope (line 494)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'p' from outer scope (line 494)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'pgms' from outer scope (line 490)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'p' from outer scope (line 494)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'pgms' from outer scope (line 490)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'max_alarms' from outer scope (line 345)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'pgms' from outer scope (line 490)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'result' from outer scope (line 504)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'folder_to_save_models' from outer scope (line 484)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'clf' from outer scope (line 47)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'pgms' from outer scope (line 490)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "redefined-outer-name",
                                        "msg": "Redefining name 'p' from outer scope (line 494)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    }
                                ],
                                "W1514": [
                                    {
                                        "symbol": "unspecified-encoding",
                                        "msg": "Using open without explicitly specifying an encoding",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "unspecified-encoding",
                                        "msg": "Using open without explicitly specifying an encoding",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    }
                                ],
                                "W0108": [
                                    {
                                        "symbol": "unnecessary-lambda",
                                        "msg": "Lambda may not be necessary",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    }
                                ],
                                "W0702": [
                                    {
                                        "symbol": "bare-except",
                                        "msg": "No exception type(s) specified",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    }
                                ],
                                "W1309": [
                                    {
                                        "symbol": "f-string-without-interpolation",
                                        "msg": "Using an f-string that does not have any interpolated variables",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "f-string-without-interpolation",
                                        "msg": "Using an f-string that does not have any interpolated variables",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    }
                                ],
                                "W0612": [
                                    {
                                        "symbol": "unused-variable",
                                        "msg": "Unused variable 'TP'",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "unused-variable",
                                        "msg": "Unused variable 'FN'",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "unused-variable",
                                        "msg": "Unused variable 'FP'",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "unused-variable",
                                        "msg": "Unused variable 'TN'",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "unused-variable",
                                        "msg": "Unused variable 'IA'",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    }
                                ],
                                "W0613": [
                                    {
                                        "symbol": "unused-argument",
                                        "msg": "Unused argument 'TP'",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "unused-argument",
                                        "msg": "Unused argument 'FN'",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "unused-argument",
                                        "msg": "Unused argument 'FP'",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "unused-argument",
                                        "msg": "Unused argument 'TN'",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    }
                                ],
                                "W0622": [
                                    {
                                        "symbol": "redefined-builtin",
                                        "msg": "Redefining built-in 'max'",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "redefined-builtin",
                                        "msg": "Redefining built-in 'sum'",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import sklearn",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    }
                                ],
                                "W0614": [
                                    {
                                        "symbol": "unused-wildcard-import",
                                        "msg": "Unused import(s) re, run_random_infer, run_infer, run_infer_pre, work, run_infer_parallel, pre_analysis, work_dd, run_dd_infer_parallel, work_random, run_random_infer_parallel and Queue from wildcard import of infer",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    }
                                ]
                            }
                        },
                        "convention": {
                            "total": 122,
                            "message_ids": {
                                "C0325": [
                                    {
                                        "symbol": "superfluous-parens",
                                        "msg": "Unnecessary parens after 'assert' keyword",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "superfluous-parens",
                                        "msg": "Unnecessary parens after 'assert' keyword",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    }
                                ],
                                "C0303": [
                                    {
                                        "symbol": "trailing-whitespace",
                                        "msg": "Trailing whitespace",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    }
                                ],
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Argument name \"X\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Argument name \"X\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Argument name \"X\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Argument name \"X\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"X\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"X\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"_X\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Argument name \"X\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Argument name \"X\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Argument name \"X\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Argument name \"X\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Argument name \"X\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"train_X\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"train_X\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"train_X\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"valid_X\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"valid_X\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"TP\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"FN\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"FP\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"TN\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"TP\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"FN\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"FP\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"TN\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Argument name \"TP\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Argument name \"FN\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Argument name \"FP\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Argument name \"TN\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Argument name \"IA\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"train_X\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"TP\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"FN\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"FP\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"TN\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"IA\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Argument name \"TP\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Argument name \"FN\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Argument name \"FP\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Argument name \"TN\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Argument name \"IA\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Argument name \"M\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Argument name \"M\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Argument name \"M\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Argument name \"M\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Argument name \"M\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"TP\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"FN\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"FP\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"TN\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"IA\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"TP\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"FN\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"FP\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"TN\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"IA\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"TP\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"FN\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"FP\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"TN\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"IA\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"TP\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"FN\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"FP\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"TN\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"IA\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"TP\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"FN\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"FP\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"TN\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"IA\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Variable name \"M\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Constant name \"b_eval\" doesn't conform to UPPER_CASE naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    }
                                ],
                                "C1803": [
                                    {
                                        "symbol": "use-implicit-booleaness-not-comparison",
                                        "msg": "\"train_X != []\" can be simplified to \"train_X\", if it is strictly a sequence, as an empty list is Falsey",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    }
                                ],
                                "C0209": [
                                    {
                                        "symbol": "consider-using-f-string",
                                        "msg": "Formatting a regular string which could be an f-string",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "consider-using-f-string",
                                        "msg": "Formatting a regular string which could be an f-string",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "consider-using-f-string",
                                        "msg": "Formatting a regular string which could be an f-string",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "consider-using-f-string",
                                        "msg": "Formatting a regular string which could be an f-string",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "consider-using-f-string",
                                        "msg": "Formatting a regular string which could be an f-string",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "consider-using-f-string",
                                        "msg": "Formatting a regular string which could be an f-string",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    }
                                ],
                                "C0121": [
                                    {
                                        "symbol": "singleton-comparison",
                                        "msg": "Comparison 'b_eval == False' should be 'b_eval is False' if checking for the singleton value False, or 'not b_eval' if testing for falsiness",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    }
                                ],
                                "C0206": [
                                    {
                                        "symbol": "consider-using-dict-items",
                                        "msg": "Consider iterating with .items()",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"multiprocessing.Process\" should be placed before third party import \"numpy\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"sys\" should be placed before third party imports \"numpy\", \"sklearn\", \"sklearn.ensemble.GradientBoostingClassifier\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"random\" should be placed before third party imports \"numpy\", \"sklearn\", \"sklearn.ensemble.GradientBoostingClassifier\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"time\" should be placed before third party imports \"numpy\", \"sklearn\", \"sklearn.ensemble.GradientBoostingClassifier\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"pickle\" should be placed before third party imports \"numpy\", \"sklearn\", \"sklearn.ensemble.GradientBoostingClassifier\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"os\" should be placed before third party imports \"numpy\", \"sklearn\", \"sklearn.ensemble.GradientBoostingClassifier\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"itertools\" should be placed before third party imports \"numpy\", \"sklearn\", \"sklearn.ensemble.GradientBoostingClassifier\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"os.path.exists\" should be placed before third party imports \"numpy\", \"sklearn\", \"sklearn.ensemble.GradientBoostingClassifier\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 37,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'for' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "too-complex",
                                        "msg": "'train_and_save' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "too-complex",
                                        "msg": "'train_and_save_models' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "too-complex",
                                        "msg": "'train_parallel' is too complex. The McCabe rating is 5",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "too-complex",
                                        "msg": "'unique_sorted' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "too-complex",
                                        "msg": "'read_file' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "too-complex",
                                        "msg": "'read_files' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "too-complex",
                                        "msg": "'trim_data' is too complex. The McCabe rating is 3",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "too-complex",
                                        "msg": "'evaluate_clf_for_parallel' is too complex. The McCabe rating is 12",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "too-complex",
                                        "msg": "'evaluate_clf_parallel' is too complex. The McCabe rating is 5",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "too-complex",
                                        "msg": "'report' is too complex. The McCabe rating is 6",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "too-complex",
                                        "msg": "'run_cv' is too complex. The McCabe rating is 3",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "too-complex",
                                        "msg": "'alarms_of_model' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "too-complex",
                                        "msg": "'max_alarms' is too complex. The McCabe rating is 3",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "too-complex",
                                        "msg": "'sum_of_max_alarms' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "too-complex",
                                        "msg": "'best_model' is too complex. The McCabe rating is 3",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "too-complex",
                                        "msg": "'opt_model_comb' is too complex. The McCabe rating is 3",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "too-complex",
                                        "msg": "'select_models' is too complex. The McCabe rating is 18",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'for' is too complex. The McCabe rating is 3",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    }
                                ],
                                "R1732": [
                                    {
                                        "symbol": "consider-using-with",
                                        "msg": "Consider using 'with' for resource-allocating operations",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "consider-using-with",
                                        "msg": "Consider using 'with' for resource-allocating operations",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "consider-using-with",
                                        "msg": "Consider using 'with' for resource-allocating operations",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "consider-using-with",
                                        "msg": "Consider using 'with' for resource-allocating operations",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "consider-using-with",
                                        "msg": "Consider using 'with' for resource-allocating operations",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "consider-using-with",
                                        "msg": "Consider using 'with' for resource-allocating operations",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    }
                                ],
                                "R1711": [
                                    {
                                        "symbol": "useless-return",
                                        "msg": "Useless return at end of function or method",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    }
                                ],
                                "R0914": [
                                    {
                                        "symbol": "too-many-locals",
                                        "msg": "Too many local variables (23/15)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "too-many-locals",
                                        "msg": "Too many local variables (21/15)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "too-many-locals",
                                        "msg": "Too many local variables (36/15)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    }
                                ],
                                "R0912": [
                                    {
                                        "symbol": "too-many-branches",
                                        "msg": "Too many branches (15/12)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "too-many-branches",
                                        "msg": "Too many branches (18/12)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    }
                                ],
                                "R0913": [
                                    {
                                        "symbol": "too-many-arguments",
                                        "msg": "Too many arguments (6/5)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    }
                                ],
                                "R0915": [
                                    {
                                        "symbol": "too-many-statements",
                                        "msg": "Too many statements (70/50)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    }
                                ],
                                "R1722": [
                                    {
                                        "symbol": "consider-using-sys-exit",
                                        "msg": "Consider using 'sys.exit' instead",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    }
                                ]
                            }
                        },
                        "error": {
                            "total": 3,
                            "message_ids": {
                                "E0401": [
                                    {
                                        "symbol": "import-error",
                                        "msg": "Unable to import 'sklearn'",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    },
                                    {
                                        "symbol": "import-error",
                                        "msg": "Unable to import 'sklearn.ensemble'",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    }
                                ],
                                "E0102": [
                                    {
                                        "symbol": "function-redefined",
                                        "msg": "function already defined line 17",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\learn_classifier.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "run_ml_infer": {
                    "total_messages": 21,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\run_ml_infer.py"
                                    }
                                ],
                                "C0410": [
                                    {
                                        "symbol": "multiple-imports",
                                        "msg": "Multiple imports on one line (sys, os)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\run_ml_infer.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Constant name \"path\" doesn't conform to UPPER_CASE naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\run_ml_infer.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 17,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\run_ml_infer.py"
                                    },
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'for' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\run_ml_infer.py"
                                    },
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\run_ml_infer.py"
                                    }
                                ],
                                "R1722": [
                                    {
                                        "symbol": "consider-using-sys-exit",
                                        "msg": "Consider using 'sys.exit' instead",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\run_ml_infer.py"
                                    }
                                ],
                                "R1732": [
                                    {
                                        "symbol": "consider-using-with",
                                        "msg": "Consider using 'with' for resource-allocating operations",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\run_ml_infer.py"
                                    }
                                ],
                                "R0801": [
                                    {
                                        "symbol": "duplicate-code",
                                        "msg": "Similar lines in 2 files\n==DDInfer:[38:51]\n==infer:[33:46]\n           f = open (report, \"r\")\n           text = f.read().replace('\\n', '')\n           issues = re.findall('Found ([0-9]+) issue', text)\n           if len(issues) == 0:\n               issues_count = 0\n           else:\n               issues_count = int(issues[0])\n\n           total_time = total_time + elapsed_time\n           total_alarms = total_alarms + issues_count\n\n       return total_time, total_alarms\n   except:",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\run_ml_infer.py"
                                    },
                                    {
                                        "symbol": "duplicate-code",
                                        "msg": "Similar lines in 2 files\n==eval_ml_infer:[22:34]\n==infer:[29:41]\n           end_t = time.time()\n           elapsed_time = end_t - start_t\n\n           report = path + p + \"/report.txt\"\n           f = open (report, \"r\")\n           text = f.read().replace('\\n', '')\n           issues = re.findall('Found ([0-9]+) issue', text)\n           if len(issues) == 0:\n               issues_count = 0\n           else:\n               issues_count = int(issues[0])\n",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\run_ml_infer.py"
                                    },
                                    {
                                        "symbol": "duplicate-code",
                                        "msg": "Similar lines in 2 files\n==collect:[42:53]\n==learn_classifier:[114:125]\n    X, y = [], []\n    with open(data_file, \"r\") as f:\n        for line in f:\n            data = list(map(lambda x: int(x), line.split()))\n            fv = data[:len(data)-1]\n            label = data[len(data)-1]\n            X.append(fv)\n            y.append(label)\n    return X, y\n\ndef read_files(data_files):",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\run_ml_infer.py"
                                    },
                                    {
                                        "symbol": "duplicate-code",
                                        "msg": "Similar lines in 2 files\n==eval_ml_infer:[10:18]\n==infer:[16:25]\n   total_time, total_alarms = 0, 0\n   try:\n       infer_out = path + p\n       if not os.path.isdir(infer_out):\n           print(\"  * Error: infer-out does not exist for \" + p)\n           exit(1)\n       else:\n           start_t = time.time()\n",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\run_ml_infer.py"
                                    },
                                    {
                                        "symbol": "duplicate-code",
                                        "msg": "Similar lines in 2 files\n==collect:[83:95]\n==learn_classifier:[158:170]\n    X, y = make_balance(X, y)\n    return X, y\n\ndef trim_data(X, y, r):\n    lst = list(zip(X, y))\n    res = []\n    for e in lst:\n        if random.random() <= r:\n            res.append(e)\n    return zip(*res)\n\ndef get_train_data(train_files, ratio):",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\run_ml_infer.py"
                                    },
                                    {
                                        "symbol": "duplicate-code",
                                        "msg": "Similar lines in 2 files\n==collect:[53:68]\n==learn_classifier:[139:151]\n    lst = list(zip(X, y))\n    pos = [(x,y) for (x,y) in lst if y == 1]\n    neg = [(x,y) for (x,y) in lst if y == 0]\n    assert (len(neg) >= len(pos))\n\n    random.shuffle(neg)\n    neg = neg[:len(pos)]\n\n    pos.extend(neg)\n    return zip(*pos)\n\ndef uniq(X, y):",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\run_ml_infer.py"
                                    },
                                    {
                                        "symbol": "duplicate-code",
                                        "msg": "Similar lines in 2 files\n==collect:[68:77]\n==learn_classifier:[99:108]\n    values = sorted(values)\n    if not values:\n        return []\n    consecutive_pairs = zip(values, itertools.islice(values, 1, len(values)))\n    result = [a for (a, b) in consecutive_pairs if a != b]\n    result.append(values[-1])\n    return result\n\ndef uniq(X, y):",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\run_ml_infer.py"
                                    },
                                    {
                                        "symbol": "duplicate-code",
                                        "msg": "Similar lines in 2 files\n==DDInfer:[38:46]\n==eval_ml_infer:[26:34]\n            f = open (report, \"r\")\n            text = f.read().replace('\\n', '')\n            issues = re.findall('Found ([0-9]+) issue', text)\n            if len(issues) == 0:\n                issues_count = 0\n            else:\n                issues_count = int(issues[0])\n",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\run_ml_infer.py"
                                    },
                                    {
                                        "symbol": "duplicate-code",
                                        "msg": "Similar lines in 2 files\n==eval_ml_infer:[36:44]\n==infer:[41:50]\n           total_time = total_time + elapsed_time\n           total_alarms = total_alarms + issues_count\n\n       return total_time, total_alarms\n   except:\n       print(f\"Skipping {p} due to unkonwn exceptions\")\n       return 0, 0\n\ndef run_infer(path, p, k, model, quiet, limit_fn, threads=1):",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\run_ml_infer.py"
                                    },
                                    {
                                        "symbol": "duplicate-code",
                                        "msg": "Similar lines in 2 files\n==eval_ml_infer:[15:21]\n==infer:[55:62]\n           exit(1)\n       else:\n           start_t = time.time()\n           use_model = \"\"\n           if model != None:\n               use_model = \"--pulse-join-select \" + model\n",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\run_ml_infer.py"
                                    },
                                    {
                                        "symbol": "duplicate-code",
                                        "msg": "Similar lines in 2 files\n==DDInfer:[58:64]\n==infer:[137:143]\n    opt_model = None\n    opt_alarms = -1\n    pt = 0\n    if len(models) == 1:\n        return models[0], 0, 0\n    for model in models:",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\run_ml_infer.py"
                                    },
                                    {
                                        "symbol": "duplicate-code",
                                        "msg": "Similar lines in 2 files\n==DDInfer:[68:75]\n==infer:[144:151]\n        if opt_alarms < a:\n            opt_alarms = a\n            opt_model = model\n        pt = pt + t\n    return opt_model, opt_alarms, pt\n\ndef run_dd_infer(path, pre_k, main_k, models):",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\run_ml_infer.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W1514": [
                                    {
                                        "symbol": "unspecified-encoding",
                                        "msg": "Using open without explicitly specifying an encoding",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\data_driven_infer\\Table2\\bin\\run_ml_infer.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 3.66,
                "repository_name": "data_driven_infer"
            },
            "stats": {
                "bad_names": {
                    "argument": 30,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 16,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 1,
                    "variable": 52,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "DDInfer": {
                        "convention": 15,
                        "error": 1,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 11,
                        "statement": 89,
                        "warning": 41
                    },
                    "collect": {
                        "convention": 39,
                        "error": 2,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 13,
                        "statement": 117,
                        "warning": 10
                    },
                    "eval_ml_infer": {
                        "convention": 8,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 9,
                        "statement": 51,
                        "warning": 7
                    },
                    "infer": {
                        "convention": 18,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 25,
                        "statement": 175,
                        "warning": 70
                    },
                    "learn_classifier": {
                        "convention": 122,
                        "error": 3,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 37,
                        "statement": 395,
                        "warning": 55
                    },
                    "run_ml_infer": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 17,
                        "statement": 21,
                        "warning": 1
                    }
                },
                "by_msg": {
                    "bad-indentation": 100,
                    "trailing-newlines": 3,
                    "anomalous-backslash-in-string": 1,
                    "missing-module-docstring": 6,
                    "invalid-name": 99,
                    "too-complex": 50,
                    "multiple-imports": 5,
                    "missing-function-docstring": 56,
                    "too-many-locals": 10,
                    "bare-except": 5,
                    "consider-using-sys-exit": 13,
                    "unspecified-encoding": 10,
                    "undefined-variable": 1,
                    "consider-using-with": 14,
                    "redefined-outer-name": 44,
                    "unused-variable": 9,
                    "trailing-whitespace": 3,
                    "superfluous-parens": 4,
                    "line-too-long": 3,
                    "import-error": 4,
                    "unnecessary-lambda": 2,
                    "use-implicit-booleaness-not-comparison": 2,
                    "no-else-continue": 1,
                    "wrong-import-order": 14,
                    "unused-import": 3,
                    "singleton-comparison": 3,
                    "too-many-arguments": 8,
                    "wildcard-import": 1,
                    "useless-return": 1,
                    "function-redefined": 1,
                    "too-many-branches": 2,
                    "consider-using-f-string": 6,
                    "f-string-without-interpolation": 2,
                    "unused-argument": 4,
                    "redefined-builtin": 2,
                    "consider-using-dict-items": 1,
                    "too-many-statements": 1,
                    "unused-wildcard-import": 1,
                    "duplicate-code": 12
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 205,
                "dependencies": {
                    "numpy": [
                        "collect",
                        "learn_classifier"
                    ],
                    "infer": [
                        "run_ml_infer",
                        "learn_classifier"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 6,
                "fatal": 0,
                "global_note": 3.7382075471698117,
                "info": 0,
                "nb_duplicated_lines": 91,
                "node_count": {
                    "function": 58,
                    "klass": 0,
                    "method": 0,
                    "module": 6
                },
                "percent_duplicated_lines": 8.265213442325159,
                "refactor": 112,
                "statement": 848,
                "undocumented": {
                    "function": 56,
                    "klass": 0,
                    "method": 0,
                    "module": 6
                },
                "warning": 184,
                "avg_mccabe_complexity": 3.66,
                "repository_name": "data_driven_infer"
            },
            "date": "2023-05-09 01:31:19-07:00"
        }
    },
    "TDD-Hangman": {
        "6f85d829c16b3c23516b0992a693f20a0e8a3f05": {
            "messages": {
                "main": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 2,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\main.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\main.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\main.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused ExceptionGroup imported from builtins",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\main.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 0,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "main": {
                        "convention": 2,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 5,
                        "warning": 1
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 1,
                    "too-complex": 1,
                    "missing-function-docstring": 1,
                    "unused-import": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 2,
                "dependencies": {},
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 2.0,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 0,
                    "method": 0,
                    "module": 6
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 1,
                "statement": 5,
                "undocumented": {
                    "function": 1,
                    "klass": 0,
                    "method": 0,
                    "module": 1
                },
                "warning": 1,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-02 15:32:00+01:00"
        },
        "1ad98e363d3e90815824c631e671199ae00a7816": {
            "messages": {
                "avg_mccabe_complexity": 0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 0,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {},
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 0,
                "dependencies": {},
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 0,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 0,
                    "klass": 0,
                    "method": 0,
                    "module": 5
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 0,
                "statement": 0,
                "undocumented": {
                    "function": 0,
                    "klass": 0,
                    "method": 0,
                    "module": 0
                },
                "warning": 0,
                "avg_mccabe_complexity": 0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-02 15:38:16+01:00"
        },
        "2237723d4ce9493fe65f86948a48e5f28c21b66d": {
            "messages": {
                "tests.hangman_test": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 0,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.controller_test": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.hangman_test": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.model_test": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.view_test": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 1,
                    "missing-class-docstring": 1,
                    "missing-function-docstring": 1,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "unused-import": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 3,
                "dependencies": {},
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.333333333333334,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 0,
                    "klass": 1,
                    "method": 1,
                    "module": 9
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 0,
                "statement": 9,
                "undocumented": {
                    "function": 0,
                    "klass": 1,
                    "method": 1,
                    "module": 1
                },
                "warning": 3,
                "avg_mccabe_complexity": 0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-02 16:00:58+01:00"
        },
        "86819b75ea7a61d1545427e5a073b74aa0b6ed6e": {
            "messages": {
                "tests.hangman_test": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 0,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.controller_test": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.hangman_test": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.model_test": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.view_test": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 1,
                    "missing-class-docstring": 1,
                    "missing-function-docstring": 1,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "unused-import": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 3,
                "dependencies": {},
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.333333333333334,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 0,
                    "klass": 1,
                    "method": 1,
                    "module": 9
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 0,
                "statement": 9,
                "undocumented": {
                    "function": 0,
                    "klass": 1,
                    "method": 1,
                    "module": 1
                },
                "warning": 3,
                "avg_mccabe_complexity": 0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-02 15:09:41+00:00"
        },
        "26bc2631bbddc72f8e18edfd7138ccba304807ac": {
            "messages": {
                "tests.hangman_test": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 0,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.controller_test": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.hangman_test": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.model_test": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.view_test": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 1,
                    "missing-class-docstring": 1,
                    "missing-function-docstring": 1,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "unused-import": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 3,
                "dependencies": {},
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.333333333333334,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 0,
                    "klass": 1,
                    "method": 1,
                    "module": 9
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 0,
                "statement": 9,
                "undocumented": {
                    "function": 0,
                    "klass": 1,
                    "method": 1,
                    "module": 1
                },
                "warning": 3,
                "avg_mccabe_complexity": 0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-02 16:24:42+01:00"
        },
        "eaa0596ce6766653400f8a80e1cca917f70226ad": {
            "messages": {
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.hangman_test": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.controller_test": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.hangman_test": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.model_test": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.view_test": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 4,
                    "invalid-name": 3,
                    "missing-class-docstring": 4,
                    "too-few-public-methods": 3,
                    "missing-function-docstring": 1,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "unused-import": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 12,
                "dependencies": {},
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 0,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 0,
                    "klass": 4,
                    "method": 1,
                    "module": 12
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 3,
                "statement": 15,
                "undocumented": {
                    "function": 0,
                    "klass": 4,
                    "method": 1,
                    "module": 4
                },
                "warning": 3,
                "avg_mccabe_complexity": 0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-02 16:38:02+01:00"
        },
        "1e9bd6663a187dff27cdba2f005bb26dba5eb6cc": {
            "messages": {
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.hangman_test": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.controller_test": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.hangman_test": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.model_test": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.view_test": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 4,
                    "invalid-name": 3,
                    "missing-class-docstring": 4,
                    "too-few-public-methods": 3,
                    "missing-function-docstring": 1,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "unused-import": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 12,
                "dependencies": {},
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 0,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 0,
                    "klass": 4,
                    "method": 1,
                    "module": 12
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 3,
                "statement": 15,
                "undocumented": {
                    "function": 0,
                    "klass": 4,
                    "method": 1,
                    "module": 4
                },
                "warning": 3,
                "avg_mccabe_complexity": 0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-02 16:40:36+01:00"
        },
        "3b683091026acff167e2f03d6d90dad24cebd52f": {
            "messages": {
                "tests.hangman_test": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 0,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.controller_test": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.hangman_test": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.model_test": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.view_test": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 1,
                    "missing-class-docstring": 1,
                    "missing-function-docstring": 1,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "unused-import": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 3,
                "dependencies": {},
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.333333333333334,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 0,
                    "klass": 1,
                    "method": 1,
                    "module": 9
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 0,
                "statement": 9,
                "undocumented": {
                    "function": 0,
                    "klass": 1,
                    "method": 1,
                    "module": 1
                },
                "warning": 3,
                "avg_mccabe_complexity": 0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-02 15:43:59+00:00"
        },
        "fec52879cec54f294896037e27c4fc3656783492": {
            "messages": {
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.hangman_test": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.controller_test": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.hangman_test": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.model_test": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.view_test": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 4,
                    "invalid-name": 3,
                    "missing-class-docstring": 4,
                    "too-few-public-methods": 3,
                    "missing-function-docstring": 1,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "unused-import": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 12,
                "dependencies": {},
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 0,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 0,
                    "klass": 4,
                    "method": 1,
                    "module": 12
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 3,
                "statement": 15,
                "undocumented": {
                    "function": 0,
                    "klass": 4,
                    "method": 1,
                    "module": 4
                },
                "warning": 3,
                "avg_mccabe_complexity": 0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-02 15:46:49+00:00"
        },
        "1ea41dfa976b35c82b335081c4cde250f67675fe": {
            "messages": {
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 5,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 5,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 7,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "missing-function-docstring": 6,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "unused-import": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 23,
                "dependencies": {
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.695652173913043,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 0,
                    "klass": 7,
                    "method": 6,
                    "module": 12
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 3,
                "statement": 46,
                "undocumented": {
                    "function": 0,
                    "klass": 7,
                    "method": 6,
                    "module": 7
                },
                "warning": 3,
                "avg_mccabe_complexity": 0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-03 14:39:52+01:00"
        },
        "42e8927ba8060dfb293462bd6e06425ad50e1374": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 6,
                            "message_ids": {
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 6,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "trailing-newlines": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 27,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.2075471698113214,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-03 15:11:55+01:00"
        },
        "7bf058a4a50f69fec30fdec0007ea435e2d10f77": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 6,
                            "message_ids": {
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 6,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "trailing-newlines": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 27,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.2075471698113214,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-03 15:25:32+01:00"
        },
        "2f5b1df0c4a12a323ee797a26dd9487663d61717": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 6,
                            "message_ids": {
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 6,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "trailing-newlines": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 27,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.2075471698113214,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-03 14:27:52+00:00"
        },
        "25c2336e1e7d8a373cdd7538e9b51e45c22f3073": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 6,
                            "message_ids": {
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 6,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "trailing-newlines": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 27,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.2075471698113214,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-03 15:40:41+01:00"
        },
        "60e11a8c54b0b4f8540c9b87451dbbaef4a9f6bd": {
            "messages": {
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.hangman_test": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.model_test": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\model_test.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.controller_test": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.hangman_test": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.model_test": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.view_test": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 4,
                    "invalid-name": 3,
                    "missing-class-docstring": 4,
                    "too-few-public-methods": 3,
                    "missing-function-docstring": 1,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "unused-import": 1,
                    "missing-final-newline": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 13,
                "dependencies": {},
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 0,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 0,
                    "klass": 4,
                    "method": 1,
                    "module": 12
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 3,
                "statement": 15,
                "undocumented": {
                    "function": 0,
                    "klass": 4,
                    "method": 1,
                    "module": 4
                },
                "warning": 3,
                "avg_mccabe_complexity": 0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-03 15:51:36+01:00"
        },
        "39faae492a9aecf441ac430cf1d68c758e2a16a0": {
            "messages": {
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 4,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.hangman_test": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.model_test": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\model_test.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 4,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.controller_test": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.hangman_test": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.model_test": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.view_test": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 4,
                    "invalid-name": 3,
                    "missing-class-docstring": 4,
                    "too-few-public-methods": 3,
                    "missing-final-newline": 2,
                    "missing-function-docstring": 1,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "unused-import": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 14,
                "dependencies": {},
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 0,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 0,
                    "klass": 4,
                    "method": 1,
                    "module": 12
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 3,
                "statement": 15,
                "undocumented": {
                    "function": 0,
                    "klass": 4,
                    "method": 1,
                    "module": 4
                },
                "warning": 3,
                "avg_mccabe_complexity": 0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-03 15:53:49+01:00"
        },
        "1b1e0203132788a9403cec80ff10efdc131395fb": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 6,
                            "message_ids": {
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 6,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "trailing-newlines": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 27,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.2075471698113214,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-03 15:56:21+01:00"
        },
        "cbdd21ffd9f6d4c4b1e88518e006d471f81a83fe": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 6,
                            "message_ids": {
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 6,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "trailing-newlines": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 27,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.2075471698113214,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-03 16:47:29+01:00"
        },
        "768dccde3c6ff5adfb1b6f042fb17e06011d5591": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 6,
                            "message_ids": {
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 6,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "trailing-newlines": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 27,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.2075471698113214,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-03 18:24:20+01:00"
        },
        "33d94046b0ba4d67c23dcfc3e8c6bcb7e12d71b9": {
            "messages": {
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 4,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.hangman_test": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 4,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.controller_test": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.hangman_test": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.model_test": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.view_test": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 4,
                    "invalid-name": 3,
                    "missing-class-docstring": 4,
                    "too-few-public-methods": 3,
                    "missing-final-newline": 1,
                    "missing-function-docstring": 1,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "unused-import": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 13,
                "dependencies": {},
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 0,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 0,
                    "klass": 4,
                    "method": 1,
                    "module": 12
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 3,
                "statement": 15,
                "undocumented": {
                    "function": 0,
                    "klass": 4,
                    "method": 1,
                    "module": 4
                },
                "warning": 3,
                "avg_mccabe_complexity": 0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-03 19:13:16+01:00"
        },
        "82ec71d245e28b13beb069bdb6ced33d9c48a9e9": {
            "messages": {
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 4,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.hangman_test": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 4,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.controller_test": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.hangman_test": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.model_test": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.view_test": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 4,
                    "invalid-name": 3,
                    "missing-class-docstring": 4,
                    "too-few-public-methods": 3,
                    "missing-final-newline": 1,
                    "missing-function-docstring": 1,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "unused-import": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 13,
                "dependencies": {},
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 0,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 0,
                    "klass": 4,
                    "method": 1,
                    "module": 12
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 3,
                "statement": 15,
                "undocumented": {
                    "function": 0,
                    "klass": 4,
                    "method": 1,
                    "module": 4
                },
                "warning": 3,
                "avg_mccabe_complexity": 0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-03 19:18:26+01:00"
        },
        "c8e6fafc9df6bdff6bc2ca80c824eed6bbfe82ba": {
            "messages": {
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.hangman_test": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.controller_test": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.hangman_test": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.model_test": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.view_test": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 4,
                    "invalid-name": 3,
                    "missing-class-docstring": 4,
                    "too-few-public-methods": 3,
                    "missing-function-docstring": 1,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "unused-import": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 12,
                "dependencies": {},
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 0,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 0,
                    "klass": 4,
                    "method": 1,
                    "module": 12
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 3,
                "statement": 15,
                "undocumented": {
                    "function": 0,
                    "klass": 4,
                    "method": 1,
                    "module": 4
                },
                "warning": 3,
                "avg_mccabe_complexity": 0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-03 19:20:05+01:00"
        },
        "59d58bb26e1f9e635581ba64310cc61b375b9871": {
            "messages": {
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.hangman_test": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.controller_test": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.hangman_test": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.model_test": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.view_test": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 4,
                    "invalid-name": 3,
                    "missing-class-docstring": 4,
                    "too-few-public-methods": 3,
                    "missing-function-docstring": 1,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "unused-import": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 12,
                "dependencies": {},
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 0,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 0,
                    "klass": 4,
                    "method": 1,
                    "module": 12
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 3,
                "statement": 15,
                "undocumented": {
                    "function": 0,
                    "klass": 4,
                    "method": 1,
                    "module": 4
                },
                "warning": 3,
                "avg_mccabe_complexity": 0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-03 19:32:05+01:00"
        },
        "0bade80da9d8bd45cd8f07970eb3de4aab5007f0": {
            "messages": {
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.hangman_test": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\hangman_test.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.controller_test": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.hangman_test": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.model_test": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.view_test": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 4,
                    "invalid-name": 3,
                    "missing-class-docstring": 4,
                    "too-few-public-methods": 3,
                    "missing-function-docstring": 1,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "unused-import": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 12,
                "dependencies": {},
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 0,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 0,
                    "klass": 4,
                    "method": 1,
                    "module": 12
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 3,
                "statement": 15,
                "undocumented": {
                    "function": 0,
                    "klass": 4,
                    "method": 1,
                    "module": 4
                },
                "warning": 3,
                "avg_mccabe_complexity": 0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-03 19:35:13+01:00"
        },
        "3cbd06c741160cccc532cd0fbbf24aead1eed1df": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 6,
                            "message_ids": {
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 6,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "trailing-newlines": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 27,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.2075471698113214,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-03 18:42:12+00:00"
        },
        "a83184b59bde8c24d781d0f305809021dfcdd6eb": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 6,
                            "message_ids": {
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 6,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "trailing-newlines": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 27,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.2075471698113214,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-03 18:45:13+00:00"
        },
        "311cde6172252dca144539342372c41cc9cda83d": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 6,
                            "message_ids": {
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.model_test": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 6,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "trailing-newlines": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 27,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.2075471698113214,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 14
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-06 20:15:40+01:00"
        },
        "04ebcbcfef702b2a3e37e4888b96d6cd99782f5b": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 6,
                            "message_ids": {
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 6,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "trailing-newlines": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 27,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.2075471698113214,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-07 08:39:44+01:00"
        },
        "d4c83bce4b106e0eee0d84cdb9cc3b53b193fd57": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 4,
                            "message_ids": {
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 6,
                            "message_ids": {
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 4,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 6,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "trailing-newlines": 2,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 28,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.018867924528302,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-07 08:42:19+01:00"
        },
        "e98d623846f1f27a29bef312b5a497f023bac3a9": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 6,
                            "message_ids": {
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 6,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "trailing-newlines": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 27,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.2075471698113214,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-07 09:36:48+01:00"
        },
        "d8b06ffce50fcbcc031cb39d67fc9fce33d620b3": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 6,
                            "message_ids": {
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 6,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "trailing-newlines": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 27,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.2075471698113214,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-07 09:40:36+01:00"
        },
        "3453924009b95e5ce62a3c848034936fc34148c1": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 6,
                            "message_ids": {
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.model_test": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 6,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "trailing-newlines": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 27,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.2075471698113214,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 14
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-07 09:58:28+00:00"
        },
        "197804efa83c55fa270c5197f427fe1afb64484e": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 6,
                            "message_ids": {
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.model_test": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 6,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "trailing-newlines": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 27,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.2075471698113214,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 14
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-07 11:22:20+01:00"
        },
        "2a99f1b87dba46d38058b6065ee7f454863a96d8": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 6,
                            "message_ids": {
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.model_test": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 6,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "trailing-newlines": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 27,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.2075471698113214,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 14
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-07 10:28:01+00:00"
        },
        "eb3b340a8d5c152487053a095562d80eca021d18": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 4,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 6,
                            "message_ids": {
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 4,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 6,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "missing-final-newline": 1,
                    "trailing-newlines": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 28,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.018867924528302,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-07 11:40:16+01:00"
        },
        "a2010efc665748bd5e4aea7261bf47cc65a8b7b1": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 4,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 6,
                            "message_ids": {
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 4,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 6,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "missing-final-newline": 1,
                    "trailing-newlines": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 28,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.018867924528302,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-08 12:06:06+00:00"
        },
        "75d21d98de107baba7081b1814fb7590e2c316f2": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 4,
                            "message_ids": {
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 4,
                            "message_ids": {
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 4,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 6,
                            "message_ids": {
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 4,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 4,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 4,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 6,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "trailing-newlines": 3,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "missing-final-newline": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 30,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 2.6415094339622645,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-08 13:30:37+01:00"
        },
        "b381357bbc6b642092f6bdca291b903453f66784": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 4,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 6,
                            "message_ids": {
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 4,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 6,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "missing-final-newline": 1,
                    "trailing-newlines": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 28,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.018867924528302,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-08 14:04:44+01:00"
        },
        "c773f610abf428de0dca3d0222ac81b3608cc71d": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 4,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 6,
                            "message_ids": {
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 4,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 6,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "missing-final-newline": 1,
                    "trailing-newlines": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 28,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.018867924528302,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-08 13:09:29+00:00"
        },
        "91d4da0a525222c0f0957f05820da0de719977f0": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 4,
                            "message_ids": {
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 6,
                            "message_ids": {
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 4,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 6,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "trailing-newlines": 2
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 28,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.018867924528302,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-08 15:02:28+01:00"
        },
        "7e6d4fb8b07616efbfcf53599450e5903e1570eb": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 6,
                            "message_ids": {
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 6,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "trailing-newlines": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 27,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.2075471698113214,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-08 15:03:57+01:00"
        },
        "2bd9b38edef698a4d5e933ac33a931604b79c1f3": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 6,
                            "message_ids": {
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 6,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "trailing-newlines": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 27,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.2075471698113214,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-08 14:08:29+00:00"
        },
        "888a3fb77badc535928e14aaecef2561a66264b6": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 6,
                            "message_ids": {
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 6,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "trailing-newlines": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 27,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.2075471698113214,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-08 15:12:25+01:00"
        },
        "51412591a1f321104b8cf075709384da43c65807": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 6,
                            "message_ids": {
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 6,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "trailing-newlines": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 27,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.2075471698113214,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-08 16:18:07+01:00"
        },
        "377eec5e47e991f04bb1088421804eef64a48175": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 6,
                            "message_ids": {
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 6,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "trailing-newlines": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 27,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.2075471698113214,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-08 16:48:46+01:00"
        },
        "5e2cd300567559c70d8341ba467e906704df2b3e": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 6,
                            "message_ids": {
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 6,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "trailing-newlines": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 27,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.2075471698113214,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-08 16:50:44+01:00"
        },
        "9062327f67f755b79643235772cc9b6067e1e694": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 6,
                            "message_ids": {
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 6,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "trailing-newlines": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 27,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.2075471698113214,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-09 13:49:13+01:00"
        },
        "4dde35d8ccfff12df858d86e35b99ad71fb66b01": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 6,
                            "message_ids": {
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 6,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "trailing-newlines": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 27,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.2075471698113214,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-09 14:04:37+01:00"
        },
        "8759902cec68abcd4bafc0a21f848aee4ce5f4a9": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 6,
                            "message_ids": {
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 6,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "trailing-newlines": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 27,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.2075471698113214,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-09 13:13:33+00:00"
        },
        "965a57608b73b70f1a9e515581bb0ea2cf250453": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 5,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 5,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 26,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.3962264150943398,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-09 14:52:03+01:00"
        },
        "e34ca2b4a5b854f004d3b6edeca6b35f3d449b64": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 4,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 4,
                            "message_ids": {
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 5,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 4,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 4,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 5,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "missing-final-newline": 1,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "trailing-newlines": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 28,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.018867924528302,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-09 15:01:27+01:00"
        },
        "08664ef062cabc5b37b3554113f60efeb6dad706": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 4,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 4,
                            "message_ids": {
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 5,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 4,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 4,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 5,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "missing-final-newline": 1,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "trailing-newlines": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 28,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.018867924528302,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-09 14:09:48+00:00"
        },
        "42d45d31db3f3c93520ea65f0b12fd0aedbccab0": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 4,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 4,
                            "message_ids": {
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 5,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 4,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 4,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 5,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "missing-final-newline": 1,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "trailing-newlines": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 28,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.018867924528302,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-09 15:59:34+01:00"
        },
        "031e73d203e47890025766e4d817b38807aeb1d3": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 4,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 4,
                            "message_ids": {
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 5,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 4,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 4,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 5,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "missing-final-newline": 1,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "trailing-newlines": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 28,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.018867924528302,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-09 15:44:11+00:00"
        },
        "7be1e3aa63376c208d2bd63af464106bef1764a4": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 1,
                    "categories": {
                        "fatal": {
                            "total": 1,
                            "message_ids": {
                                "F0002": [
                                    {
                                        "symbol": "astroid-error",
                                        "msg": "C:\\MIUN\\DT002G\\github_metric_extractor\\out\\repositories\\TDD-Hangman\\tests\\test_controller.py: Fatal error while checking 'C:\\MIUN\\DT002G\\github_metric_extractor\\out\\repositories\\TDD-Hangman\\tests\\test_controller.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in 'C:\\Users\\tobia\\AppData\\Local\\pylint\\pylint\\Cache\\pylint-crash-2024-03-24-11-35-52.txt'.",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 4,
                            "message_ids": {
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 5,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 1,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 4,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 5,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 7,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 6,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 6,
                    "too-few-public-methods": 3,
                    "astroid-error": 1,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "trailing-newlines": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 24,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 1,
                "global_note": 0,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 6,
                    "method": 5,
                    "module": 12
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 44,
                "undocumented": {
                    "function": 1,
                    "klass": 6,
                    "method": 5,
                    "module": 7
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-09 18:01:22+01:00"
        },
        "6add8ddcaa95d7e4ad783b656befbcf8583bb45e": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 4,
                            "message_ids": {
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 5,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 4,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 5,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "trailing-newlines": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 27,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.2075471698113214,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-10 14:08:33+01:00"
        },
        "05fb3d4ad7c4c838bf9676ba15d1d6152aeabbea": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 4,
                            "message_ids": {
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 5,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 4,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 5,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "trailing-newlines": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 27,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.2075471698113214,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-10 13:17:33+00:00"
        },
        "31746f181b1fbee10a60c433ba42ecd31eb90bc4": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 4,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 5,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 4,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 5,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "missing-final-newline": 1,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 27,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.2075471698113214,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-10 14:24:57+01:00"
        },
        "1f9a78982ebd9b5b5986d2686b6a16206cae4033": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 4,
                            "message_ids": {
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 5,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 4,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 5,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "trailing-newlines": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 27,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.2075471698113214,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-10 14:38:36+01:00"
        },
        "6abc4d5b408998f28cd3b99206a255d0384cdb45": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 4,
                            "message_ids": {
                                "C0305": [
                                    {
                                        "symbol": "trailing-newlines",
                                        "msg": "Trailing newlines",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 5,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 4,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 5,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1,
                    "trailing-newlines": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 27,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.2075471698113214,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-10 13:39:55+00:00"
        },
        "569433c23d62c3a54a241b67f11107ef3cb634ac": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 5,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 5,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 26,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.3962264150943398,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-10 13:40:44+00:00"
        },
        "0e80487b75dccc57f334486869381a21f3783d0e": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 5,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 5,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 26,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.3962264150943398,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-10 15:34:53+01:00"
        },
        "61079905452a07e2e70a4a8559d71be2c46087ff": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 5,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 5,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 26,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.3962264150943398,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-10 14:41:04+00:00"
        },
        "26a9d58a0f569eff76da77fb4232fda30cd9df3b": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 5,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 5,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 26,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.3962264150943398,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-10 17:23:00+01:00"
        },
        "4704866b36e4a662875add351e479b9690aca123": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 5,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 5,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 26,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.3962264150943398,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-10 17:34:35+01:00"
        },
        "843c105b9a7d87d5c7ee51752c0e4dcc58deb3fe": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 5,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 5,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 26,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.3962264150943398,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-11 15:58:48+00:00"
        },
        "40b2c821dad601796665feb82223bfdb7e65a1d1": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.other.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\other\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 5,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 5,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "missing-final-newline": 4,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 30,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.275862068965517,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 58,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-17 14:18:01+01:00"
        },
        "7af417f916f6d3628b322d2d6d96a9e7b6348e6c": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 5,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 5,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 26,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.3962264150943398,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 53,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-17 14:23:47+01:00"
        },
        "760f4f130751909c91877a7b4b4578deb09f84d5": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 5,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 5,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 7,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 6,
                    "wrong-import-order": 1,
                    "unused-import": 1,
                    "invalid-name": 3,
                    "missing-class-docstring": 6,
                    "too-few-public-methods": 3
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 23,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.409090909090909,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 6,
                    "method": 5,
                    "module": 12
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 44,
                "undocumented": {
                    "function": 1,
                    "klass": 6,
                    "method": 5,
                    "module": 7
                },
                "warning": 1,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-17 14:24:21+01:00"
        },
        "a2d73625ed44fa0732acc54525ec86e8eecbd214": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.other.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\other\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 5,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 5,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "missing-final-newline": 4,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 30,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.275862068965517,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 58,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-17 13:25:43+00:00"
        },
        "bdff6b3d1e0c99481d904d5b5517e54817f70800": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.other.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\other\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 3,
                            "message_ids": {
                                "W1503": [
                                    {
                                        "symbol": "redundant-unittest-assert",
                                        "msg": "Redundant use of assertTrue with constant value 1",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0107": [
                                    {
                                        "symbol": "unnecessary-pass",
                                        "msg": "Unnecessary pass statement",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ],
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused import json",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 5,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 3
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 5,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 8,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 7,
                    "wrong-import-order": 1,
                    "unused-import": 2,
                    "invalid-name": 3,
                    "missing-class-docstring": 7,
                    "too-few-public-methods": 3,
                    "missing-final-newline": 4,
                    "redundant-unittest-assert": 1,
                    "unnecessary-pass": 1
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 30,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.275862068965517,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 58,
                "undocumented": {
                    "function": 1,
                    "klass": 7,
                    "method": 6,
                    "module": 8
                },
                "warning": 4,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-17 13:30:15+00:00"
        },
        "eeaad1fc7b0bcb6cab428311a433144501c94ce9": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.other.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\other\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 5,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 5,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 7,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 6,
                    "wrong-import-order": 1,
                    "unused-import": 1,
                    "invalid-name": 3,
                    "missing-class-docstring": 6,
                    "too-few-public-methods": 3,
                    "missing-final-newline": 4
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 27,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.2653061224489797,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 6,
                    "method": 5,
                    "module": 12
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 49,
                "undocumented": {
                    "function": 1,
                    "klass": 6,
                    "method": 5,
                    "module": 7
                },
                "warning": 1,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-17 13:32:30+00:00"
        },
        "04dd31b4fb0ff9b2184807995fbae47f336e1930": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.other.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\other\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 5,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 5,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 7,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 6,
                    "wrong-import-order": 1,
                    "unused-import": 1,
                    "invalid-name": 3,
                    "missing-class-docstring": 6,
                    "too-few-public-methods": 3,
                    "missing-final-newline": 4
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 27,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.2653061224489797,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 6,
                    "method": 5,
                    "module": 12
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 49,
                "undocumented": {
                    "function": 1,
                    "klass": 6,
                    "method": 5,
                    "module": 7
                },
                "warning": 1,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-17 15:26:22+01:00"
        },
        "2737a55e5a015bcbc962bb789218d2bdb3eff0e1": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.other.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\other\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 5,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 5,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 7,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 6,
                    "wrong-import-order": 1,
                    "unused-import": 1,
                    "invalid-name": 3,
                    "missing-class-docstring": 6,
                    "too-few-public-methods": 3,
                    "missing-final-newline": 4
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 27,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.2653061224489797,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 6,
                    "method": 5,
                    "module": 12
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 49,
                "undocumented": {
                    "function": 1,
                    "klass": 6,
                    "method": 5,
                    "module": 7
                },
                "warning": 1,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-17 14:33:07+00:00"
        },
        "7bb2856dc5c3472bf08cce2b097631933bf2f8cc": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.other.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\other\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 5,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 5,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 7,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 6,
                    "wrong-import-order": 1,
                    "unused-import": 1,
                    "invalid-name": 3,
                    "missing-class-docstring": 6,
                    "too-few-public-methods": 3,
                    "missing-final-newline": 4
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 27,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.2653061224489797,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 6,
                    "method": 5,
                    "module": 12
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 49,
                "undocumented": {
                    "function": 1,
                    "klass": 6,
                    "method": 5,
                    "module": 7
                },
                "warning": 1,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-17 15:44:59+01:00"
        },
        "3e76c78d7132fc8ec40a4b305ce79909f5858d3b": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.other.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\other\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 5,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 5,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 7,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 6,
                    "wrong-import-order": 1,
                    "unused-import": 1,
                    "invalid-name": 3,
                    "missing-class-docstring": 6,
                    "too-few-public-methods": 3,
                    "missing-final-newline": 4
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 27,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.2653061224489797,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 6,
                    "method": 5,
                    "module": 12
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 49,
                "undocumented": {
                    "function": 1,
                    "klass": 6,
                    "method": 5,
                    "module": 7
                },
                "warning": 1,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-17 16:19:52+01:00"
        },
        "bb6ab25d69edf6771908dd0e1bf6dd21c635af49": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.other.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\other\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 5,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 5,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 7,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 6,
                    "wrong-import-order": 1,
                    "unused-import": 1,
                    "invalid-name": 3,
                    "missing-class-docstring": 6,
                    "too-few-public-methods": 3,
                    "missing-final-newline": 4
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 27,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.2653061224489797,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 6,
                    "method": 5,
                    "module": 12
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 49,
                "undocumented": {
                    "function": 1,
                    "klass": 6,
                    "method": 5,
                    "module": 7
                },
                "warning": 1,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-17 15:21:36+00:00"
        },
        "b2bd9fef0ab3c31cad2abb48e1a641288e8e1cbe": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.other.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\other\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 5,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 5,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 7,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 6,
                    "wrong-import-order": 1,
                    "unused-import": 1,
                    "invalid-name": 3,
                    "missing-class-docstring": 6,
                    "too-few-public-methods": 3,
                    "missing-final-newline": 4
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 27,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller"
                    ],
                    "src.models.GameEngine": [
                        "tests.test_model"
                    ],
                    "src.views.GUI": [
                        "tests.test_view"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 3.2653061224489797,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 6,
                    "method": 5,
                    "module": 12
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 49,
                "undocumented": {
                    "function": 1,
                    "klass": 6,
                    "method": 5,
                    "module": 7
                },
                "warning": 1,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-17 15:34:31+00:00"
        },
        "aea7f5b0e1bc20ca3ed33fda6ca5d02037d5bc7b": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.other.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\other\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 5,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 4,
                        "warning": 0
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 4,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 5,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 7,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 6,
                    "wrong-import-order": 1,
                    "unused-import": 1,
                    "invalid-name": 3,
                    "missing-class-docstring": 6,
                    "too-few-public-methods": 3,
                    "missing-final-newline": 4
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 27,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.views.GUI": [
                        "src",
                        "tests.test_view"
                    ],
                    "src.models.GameEngine": [
                        "src",
                        "tests.test_model"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller",
                        "src"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 4.107142857142857,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 6,
                    "method": 5,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 56,
                "undocumented": {
                    "function": 1,
                    "klass": 6,
                    "method": 5,
                    "module": 7
                },
                "warning": 1,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-19 14:39:41+01:00"
        },
        "ff76ec8dc7ba80d0ed2dc5b214a3cb5598677a35": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.other.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\other\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 5,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 4,
                        "warning": 0
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 4,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 5,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 7,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 6,
                    "wrong-import-order": 1,
                    "unused-import": 1,
                    "invalid-name": 3,
                    "missing-class-docstring": 6,
                    "too-few-public-methods": 3,
                    "missing-final-newline": 4
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 27,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.views.GUI": [
                        "src",
                        "tests.test_view"
                    ],
                    "src.models.GameEngine": [
                        "src",
                        "tests.test_model"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller",
                        "src"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 4.107142857142857,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 6,
                    "method": 5,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 56,
                "undocumented": {
                    "function": 1,
                    "klass": 6,
                    "method": 5,
                    "module": 7
                },
                "warning": 1,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-19 13:46:37+00:00"
        },
        "696e99cf012017c33ffa4aad92a5ff701bee11a1": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.other.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\other\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 5,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 4,
                        "warning": 0
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 4,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 5,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 7,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 6,
                    "wrong-import-order": 1,
                    "unused-import": 1,
                    "invalid-name": 3,
                    "missing-class-docstring": 6,
                    "too-few-public-methods": 3,
                    "missing-final-newline": 4
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 27,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.views.GUI": [
                        "src",
                        "tests.test_view"
                    ],
                    "src.models.GameEngine": [
                        "src",
                        "tests.test_model"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller",
                        "src"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 4.107142857142857,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 6,
                    "method": 5,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 56,
                "undocumented": {
                    "function": 1,
                    "klass": 6,
                    "method": 5,
                    "module": 7
                },
                "warning": 1,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-19 15:01:14+01:00"
        },
        "296dd4a9d56a256f88e8d5b23b2c5a500c471d97": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.other.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\other\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 5,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 4,
                        "warning": 0
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 4,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 5,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 7,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 6,
                    "wrong-import-order": 1,
                    "unused-import": 1,
                    "invalid-name": 3,
                    "missing-class-docstring": 6,
                    "too-few-public-methods": 3,
                    "missing-final-newline": 4
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 27,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.views.GUI": [
                        "src",
                        "tests.test_view"
                    ],
                    "src.models.GameEngine": [
                        "src",
                        "tests.test_model"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller",
                        "src"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 4.107142857142857,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 6,
                    "method": 5,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 56,
                "undocumented": {
                    "function": 1,
                    "klass": 6,
                    "method": 5,
                    "module": 7
                },
                "warning": 1,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-19 14:02:51+00:00"
        },
        "0f3f675e3a82a5b5de894259c7776dadd666e0cc": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.other.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\other\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 5,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 4,
                        "warning": 0
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 4,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 5,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 7,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 6,
                    "wrong-import-order": 1,
                    "unused-import": 1,
                    "invalid-name": 3,
                    "missing-class-docstring": 6,
                    "too-few-public-methods": 3,
                    "missing-final-newline": 4
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 27,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.views.GUI": [
                        "src",
                        "tests.test_view"
                    ],
                    "src.models.GameEngine": [
                        "src",
                        "tests.test_model"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller",
                        "src"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 4.107142857142857,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 6,
                    "method": 5,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 56,
                "undocumented": {
                    "function": 1,
                    "klass": 6,
                    "method": 5,
                    "module": 7
                },
                "warning": 1,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-19 15:15:06+01:00"
        },
        "8d05bf19f5986e99e4e58537243ba00225566b6c": {
            "messages": {
                "src.hangman": {
                    "total_messages": 6,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "C0411": [
                                    {
                                        "symbol": "wrong-import-order",
                                        "msg": "standard import \"tkinter\" should be placed before third party import \"views.GUI\"",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 2,
                            "message_ids": {
                                "R1260": [
                                    {
                                        "symbol": "too-complex",
                                        "msg": "This 'if' is too complex. The McCabe rating is 2",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ],
                                "R0402": [
                                    {
                                        "symbol": "consider-using-from-import",
                                        "msg": "Use 'from views import GUI' instead",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        },
                        "warning": {
                            "total": 1,
                            "message_ids": {
                                "W0611": [
                                    {
                                        "symbol": "unused-import",
                                        "msg": "Unused tkinter imported as tk",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\hangman.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.controllers.Controller": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"Controller\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\controllers\\Controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.GameEngine": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GameEngine\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\GameEngine.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.models.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\models\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.other.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\other\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.GUI": {
                    "total_messages": 4,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0103": [
                                    {
                                        "symbol": "invalid-name",
                                        "msg": "Module name \"GUI\" doesn't conform to snake_case naming style",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        },
                        "refactor": {
                            "total": 1,
                            "message_ids": {
                                "R0903": [
                                    {
                                        "symbol": "too-few-public-methods",
                                        "msg": "Too few public methods (0/2)",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\GUI.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "src.views.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\src\\views\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_controller": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_controller.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_model": {
                    "total_messages": 3,
                    "categories": {
                        "convention": {
                            "total": 3,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_model.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.test_view": {
                    "total_messages": 5,
                    "categories": {
                        "convention": {
                            "total": 5,
                            "message_ids": {
                                "C0114": [
                                    {
                                        "symbol": "missing-module-docstring",
                                        "msg": "Missing module docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0115": [
                                    {
                                        "symbol": "missing-class-docstring",
                                        "msg": "Missing class docstring",
                                        "confidence": [
                                            "HIGH",
                                            "Warning that is not based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ],
                                "C0116": [
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    },
                                    {
                                        "symbol": "missing-function-docstring",
                                        "msg": "Missing function or method docstring",
                                        "confidence": [
                                            "INFERENCE",
                                            "Warning based on inference result."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\test_view.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "tests.__init__": {
                    "total_messages": 1,
                    "categories": {
                        "convention": {
                            "total": 1,
                            "message_ids": {
                                "C0304": [
                                    {
                                        "symbol": "missing-final-newline",
                                        "msg": "Final newline missing",
                                        "confidence": [
                                            "UNDEFINED",
                                            "Warning without any associated confidence level."
                                        ],
                                        "path": "out\\repositories\\TDD-Hangman\\tests\\__init__.py"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "stats": {
                "bad_names": {
                    "argument": 0,
                    "attr": 0,
                    "klass": 0,
                    "class_attribute": 0,
                    "class_const": 0,
                    "const": 0,
                    "inlinevar": 0,
                    "function": 0,
                    "method": 0,
                    "module": 3,
                    "variable": 0,
                    "typevar": 0,
                    "typealias": 0
                },
                "by_module": {
                    "C:\\MIUN\\DT002G\\github_metric_extractor\\mining\\.pylintrc": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "Command line or configuration file": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 0,
                        "warning": 0
                    },
                    "src.hangman": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 2,
                        "statement": 7,
                        "warning": 1
                    },
                    "src.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 4,
                        "warning": 0
                    },
                    "src.controllers.Controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.controllers.__init__": {
                        "convention": 0,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.models.GameEngine": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.models.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.other.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    },
                    "src.views.GUI": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 1,
                        "statement": 2,
                        "warning": 0
                    },
                    "src.views.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 4,
                        "warning": 0
                    },
                    "tests.test_controller": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_model": {
                        "convention": 3,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 9,
                        "warning": 0
                    },
                    "tests.test_view": {
                        "convention": 5,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 13,
                        "warning": 0
                    },
                    "tests.__init__": {
                        "convention": 1,
                        "error": 0,
                        "fatal": 0,
                        "info": 0,
                        "refactor": 0,
                        "statement": 1,
                        "warning": 0
                    }
                },
                "by_msg": {
                    "missing-module-docstring": 7,
                    "too-complex": 1,
                    "consider-using-from-import": 1,
                    "missing-function-docstring": 6,
                    "wrong-import-order": 1,
                    "unused-import": 1,
                    "invalid-name": 3,
                    "missing-class-docstring": 6,
                    "too-few-public-methods": 3,
                    "missing-final-newline": 4
                },
                "code_type_count": {
                    "code": 0,
                    "comment": 0,
                    "docstring": 0,
                    "empty": 0,
                    "total": 0
                },
                "convention": 27,
                "dependencies": {
                    "views.GUI": [
                        "src.hangman"
                    ],
                    "src.views.GUI": [
                        "src",
                        "tests.test_view"
                    ],
                    "src.models.GameEngine": [
                        "src",
                        "tests.test_model"
                    ],
                    "src.controllers.Controller": [
                        "tests.test_controller",
                        "src"
                    ]
                },
                "duplicated_lines": {
                    "nb_duplicated_lines": 0,
                    "percent_duplicated_lines": 0.0
                },
                "error": 0,
                "fatal": 0,
                "global_note": 4.107142857142857,
                "info": 0,
                "nb_duplicated_lines": 0,
                "node_count": {
                    "function": 1,
                    "klass": 6,
                    "method": 5,
                    "module": 13
                },
                "percent_duplicated_lines": 0.0,
                "refactor": 5,
                "statement": 56,
                "undocumented": {
                    "function": 1,
                    "klass": 6,
                    "method": 5,
                    "module": 7
                },
                "warning": 1,
                "avg_mccabe_complexity": 2.0,
                "repository_name": "TDD-Hangman"
            },
            "date": "2023-03-19 14:17:42+00:00"
        }
    }
}

stargazers = {
    "amalfi-artifact": {
        "data": {
            "repository": {
                "stargazers": {
                    "edges": [
                        {
                            "cursor": "Y3Vyc29yOnYyOpIAzhNcqHU=",
                            "starredAt": "2022-03-15T22:33:22Z",
                            "node": {
                                "login": "TheeMattOliver"
                            }
                        },
                        {
                            "cursor": "Y3Vyc29yOnYyOpIAzhNeCYY=",
                            "starredAt": "2022-03-16T09:57:42Z",
                            "node": {
                                "login": "abhishek9sharma"
                            }
                        },
                        {
                            "cursor": "Y3Vyc29yOnYyOpIAzhOjOEA=",
                            "starredAt": "2022-04-10T09:15:08Z",
                            "node": {
                                "login": "Anemone95"
                            }
                        },
                        {
                            "cursor": "Y3Vyc29yOnYyOpIAzhSIegE=",
                            "starredAt": "2022-07-02T14:24:49Z",
                            "node": {
                                "login": "viewfinder-annn"
                            }
                        },
                        {
                            "cursor": "Y3Vyc29yOnYyOpIAzhSY0wk=",
                            "starredAt": "2022-07-08T13:19:04Z",
                            "node": {
                                "login": "zengjia1"
                            }
                        },
                        {
                            "cursor": "Y3Vyc29yOnYyOpIAzhTEQPo=",
                            "starredAt": "2022-07-25T00:43:04Z",
                            "node": {
                                "login": "ourren"
                            }
                        },
                        {
                            "cursor": "Y3Vyc29yOnYyOpIAzhTGG2A=",
                            "starredAt": "2022-07-25T14:11:21Z",
                            "node": {
                                "login": "fanmcgrady"
                            }
                        },
                        {
                            "cursor": "Y3Vyc29yOnYyOpIAzhUrTYo=",
                            "starredAt": "2022-09-01T06:59:00Z",
                            "node": {
                                "login": "fpb1386"
                            }
                        },
                        {
                            "cursor": "Y3Vyc29yOnYyOpIAzhXIS_Q=",
                            "starredAt": "2022-10-28T02:38:12Z",
                            "node": {
                                "login": "chengyuhui"
                            }
                        },
                        {
                            "cursor": "Y3Vyc29yOnYyOpIAzhXZk8Y=",
                            "starredAt": "2022-11-02T23:27:02Z",
                            "node": {
                                "login": "Lioo7"
                            }
                        },
                        {
                            "cursor": "Y3Vyc29yOnYyOpIAzhXwcFk=",
                            "starredAt": "2022-11-10T11:28:57Z",
                            "node": {
                                "login": "Qujixiang"
                            }
                        },
                        {
                            "cursor": "Y3Vyc29yOnYyOpIAzhYhurI=",
                            "starredAt": "2022-11-28T03:45:23Z",
                            "node": {
                                "login": "willTerner"
                            }
                        },
                        {
                            "cursor": "Y3Vyc29yOnYyOpIAzhYrt8c=",
                            "starredAt": "2022-12-01T02:49:40Z",
                            "node": {
                                "login": "jasonren0403"
                            }
                        },
                        {
                            "cursor": "Y3Vyc29yOnYyOpIAzhZSwyA=",
                            "starredAt": "2022-12-14T07:02:01Z",
                            "node": {
                                "login": "3Norns"
                            }
                        },
                        {
                            "cursor": "Y3Vyc29yOnYyOpIAzhcDFGw=",
                            "starredAt": "2023-02-09T09:04:10Z",
                            "node": {
                                "login": "mgobbi289"
                            }
                        },
                        {
                            "cursor": "Y3Vyc29yOnYyOpIAzhe1TJY=",
                            "starredAt": "2023-03-11T16:11:10Z",
                            "node": {
                                "login": "R9295"
                            }
                        },
                        {
                            "cursor": "Y3Vyc29yOnYyOpIAzhfBbcg=",
                            "starredAt": "2023-03-13T20:14:47Z",
                            "node": {
                                "login": "Md-Siam07"
                            }
                        },
                        {
                            "cursor": "Y3Vyc29yOnYyOpIAzhfIs6M=",
                            "starredAt": "2023-03-15T06:01:08Z",
                            "node": {
                                "login": "Nasir-1310"
                            }
                        },
                        {
                            "cursor": "Y3Vyc29yOnYyOpIAzhfdvzM=",
                            "starredAt": "2023-03-18T08:12:25Z",
                            "node": {
                                "login": "KaziMuktadirAhmed"
                            }
                        },
                        {
                            "cursor": "Y3Vyc29yOnYyOpIAzhf-TU0=",
                            "starredAt": "2023-03-22T16:53:34Z",
                            "node": {
                                "login": "cvic"
                            }
                        },
                        {
                            "cursor": "Y3Vyc29yOnYyOpIAzhg6Edg=",
                            "starredAt": "2023-04-04T06:29:40Z",
                            "node": {
                                "login": "jadoonf"
                            }
                        },
                        {
                            "cursor": "Y3Vyc29yOnYyOpIAzhhIMmQ=",
                            "starredAt": "2023-04-07T14:16:04Z",
                            "node": {
                                "login": "lojikil"
                            }
                        },
                        {
                            "cursor": "Y3Vyc29yOnYyOpIAzhh5kHU=",
                            "starredAt": "2023-04-19T02:15:56Z",
                            "node": {
                                "login": "willowwy"
                            }
                        },
                        {
                            "cursor": "Y3Vyc29yOnYyOpIAzhm3ut8=",
                            "starredAt": "2023-07-08T06:03:33Z",
                            "node": {
                                "login": "banxiangao"
                            }
                        },
                        {
                            "cursor": "Y3Vyc29yOnYyOpIAzhnAtQE=",
                            "starredAt": "2023-07-10T19:35:28Z",
                            "node": {
                                "login": "okadahiro0621"
                            }
                        },
                        {
                            "cursor": "Y3Vyc29yOnYyOpIAzhoimEE=",
                            "starredAt": "2023-08-09T02:11:40Z",
                            "node": {
                                "login": "qdw1987"
                            }
                        },
                        {
                            "cursor": "Y3Vyc29yOnYyOpIAzhpnVA0=",
                            "starredAt": "2023-08-30T02:01:10Z",
                            "node": {
                                "login": "wannch"
                            }
                        },
                        {
                            "cursor": "Y3Vyc29yOnYyOpIAzhqcd4o=",
                            "starredAt": "2023-09-16T11:22:38Z",
                            "node": {
                                "login": "LDHo"
                            }
                        },
                        {
                            "cursor": "Y3Vyc29yOnYyOpIAzhq1TiQ=",
                            "starredAt": "2023-09-25T00:02:18Z",
                            "node": {
                                "login": "lippytm"
                            }
                        },
                        {
                            "cursor": "Y3Vyc29yOnYyOpIAzhspxNM=",
                            "starredAt": "2023-11-02T23:16:02Z",
                            "node": {
                                "login": "S0UGATA"
                            }
                        },
                        {
                            "cursor": "Y3Vyc29yOnYyOpIAzhtNUrY=",
                            "starredAt": "2023-11-14T12:11:47Z",
                            "node": {
                                "login": "liuzibo1019"
                            }
                        },
                        {
                            "cursor": "Y3Vyc29yOnYyOpIAzhzlrsI=",
                            "starredAt": "2024-03-13T10:19:16Z",
                            "node": {
                                "login": "Hee-won"
                            }
                        }
                    ]
                },
                "name": "amalfi-artifact"
            }
        }
    },
    "data_driven_infer": {
        "data": {
            "repository": {
                "stargazers": {
                    "edges": [
                        {
                            "cursor": "Y3Vyc29yOnYyOpIAzhjIbqI=",
                            "starredAt": "2023-05-09T08:34:51Z",
                            "node": {
                                "login": "GitHub30"
                            }
                        },
                        {
                            "cursor": "Y3Vyc29yOnYyOpIAzhjJeoo=",
                            "starredAt": "2023-05-09T12:46:36Z",
                            "node": {
                                "login": "nzw0301"
                            }
                        },
                        {
                            "cursor": "Y3Vyc29yOnYyOpIAzhjLhR8=",
                            "starredAt": "2023-05-10T00:45:06Z",
                            "node": {
                                "login": "antx-code"
                            }
                        },
                        {
                            "cursor": "Y3Vyc29yOnYyOpIAzhjL4cw=",
                            "starredAt": "2023-05-10T02:49:51Z",
                            "node": {
                                "login": "FakeTrader"
                            }
                        }
                    ]
                },
                "name": "data_driven_infer"
            }
        }
    },
    "TDD-Hangman": {
        "data": {
            "repository": {
                "stargazers": {
                    "edges": []
                },
                "name": "TDD-Hangman"
            }
        }
    }
}

test = {
    "amalfi-artifact": {
        "9d15930a52dd1949615005dce240bb628cec7860": {
            "files": {
                "\\amalfi-artifact\\code\\clone-detector\\hash_package.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 42,
                    "test_statements": 0
                },
                "\\amalfi-artifact\\code\\training\\train_classifier.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 182,
                    "test_statements": 0
                },
                "\\amalfi-artifact\\code\\training\\util.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 18,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.0,
            "date": "2022-01-25 10:46:59+00:00"
        }
    },
    "data_driven_infer": {
        "92f63bd26dd583a5d24bf1a17eba552a917a74a4": {
            "files": {
                "\\data_driven_infer\\bin\\DDInfer.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 121,
                    "test_statements": 0
                },
                "\\data_driven_infer\\Table2\\bin\\collect.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 177,
                    "test_statements": 0
                },
                "\\data_driven_infer\\Table2\\bin\\eval_ml_infer.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 69,
                    "test_statements": 0
                },
                "\\data_driven_infer\\Table2\\bin\\infer.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 214,
                    "test_statements": 0
                },
                "\\data_driven_infer\\Table2\\bin\\learn_classifier.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 529,
                    "test_statements": 0
                },
                "\\data_driven_infer\\Table2\\bin\\run_ml_infer.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 34,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.0,
            "date": "2023-05-09 01:31:19-07:00"
        }
    },
    "TDD-Hangman": {
        "6f85d829c16b3c23516b0992a693f20a0e8a3f05": {
            "files": {
                "\\TDD-Hangman\\main.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 5,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.0,
            "date": "2023-03-02 15:32:00+01:00"
        },
        "1ad98e363d3e90815824c631e671199ae00a7816": {
            "files": {
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0,
            "date": "2023-03-02 15:38:16+01:00"
        },
        "2237723d4ce9493fe65f86948a48e5f28c21b66d": {
            "files": {
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\controller_test.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\hangman_test.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\model_test.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\view_test.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.38461538461538464,
            "date": "2023-03-02 16:00:58+01:00"
        },
        "86819b75ea7a61d1545427e5a073b74aa0b6ed6e": {
            "files": {
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\controller_test.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\hangman_test.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\model_test.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\view_test.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.38461538461538464,
            "date": "2023-03-02 15:09:41+00:00"
        },
        "26bc2631bbddc72f8e18edfd7138ccba304807ac": {
            "files": {
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\controller_test.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\hangman_test.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\model_test.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\view_test.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.38461538461538464,
            "date": "2023-03-02 16:24:42+01:00"
        },
        "eaa0596ce6766653400f8a80e1cca917f70226ad": {
            "files": {
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\controller_test.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\hangman_test.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\model_test.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\view_test.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.3125,
            "date": "2023-03-02 16:38:02+01:00"
        },
        "1e9bd6663a187dff27cdba2f005bb26dba5eb6cc": {
            "files": {
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\controller_test.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 7
                },
                "\\TDD-Hangman\\tests\\hangman_test.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\model_test.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 7
                },
                "\\TDD-Hangman\\tests\\view_test.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 7
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.4482758620689655,
            "date": "2023-03-02 16:40:36+01:00"
        },
        "3b683091026acff167e2f03d6d90dad24cebd52f": {
            "files": {
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\controller_test.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\hangman_test.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\model_test.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\view_test.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.38461538461538464,
            "date": "2023-03-02 15:43:59+00:00"
        },
        "fec52879cec54f294896037e27c4fc3656783492": {
            "files": {
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\controller_test.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 7
                },
                "\\TDD-Hangman\\tests\\hangman_test.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\model_test.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 7
                },
                "\\TDD-Hangman\\tests\\view_test.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 7
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.4482758620689655,
            "date": "2023-03-02 15:46:49+00:00"
        },
        "1ea41dfa976b35c82b335081c4cde250f67675fe": {
            "files": {
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 7
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 7
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy"
                    ],
                    "production_statements": 7,
                    "test_statements": 19
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.5428571428571428,
            "date": "2023-03-03 14:39:52+01:00"
        },
        "42e8927ba8060dfb293462bd6e06425ad50e1374": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 9,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 35,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 7
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 7
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons"
                    ],
                    "production_statements": 7,
                    "test_statements": 31
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.4,
            "date": "2023-03-03 15:11:55+01:00"
        },
        "7bf058a4a50f69fec30fdec0007ea435e2d10f77": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 9,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 41,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 7
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 7
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons"
                    ],
                    "production_statements": 7,
                    "test_statements": 37
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.40875912408759124,
            "date": "2023-03-03 15:25:32+01:00"
        },
        "2f5b1df0c4a12a323ee797a26dd9487663d61717": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 9,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 41,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 7
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 7
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons"
                    ],
                    "production_statements": 7,
                    "test_statements": 37
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.40875912408759124,
            "date": "2023-03-03 14:27:52+00:00"
        },
        "25c2336e1e7d8a373cdd7538e9b51e45c22f3073": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 9,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 41,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 7
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 7
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons"
                    ],
                    "production_statements": 7,
                    "test_statements": 37
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.40875912408759124,
            "date": "2023-03-03 15:40:41+01:00"
        },
        "60e11a8c54b0b4f8540c9b87451dbbaef4a9f6bd": {
            "files": {
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\controller_test.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 7
                },
                "\\TDD-Hangman\\tests\\hangman_test.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\model_test.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_char_validation_positive",
                        "test_char_validation_negative"
                    ],
                    "production_statements": 7,
                    "test_statements": 22
                },
                "\\TDD-Hangman\\tests\\view_test.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 7
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.5616438356164384,
            "date": "2023-03-03 15:51:36+01:00"
        },
        "39faae492a9aecf441ac430cf1d68c758e2a16a0": {
            "files": {
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 7,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\controller_test.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 7
                },
                "\\TDD-Hangman\\tests\\hangman_test.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\model_test.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_char_validation_positive",
                        "test_char_validation_negative"
                    ],
                    "production_statements": 7,
                    "test_statements": 22
                },
                "\\TDD-Hangman\\tests\\view_test.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 7
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.5189873417721519,
            "date": "2023-03-03 15:53:49+01:00"
        },
        "1b1e0203132788a9403cec80ff10efdc131395fb": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 9,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 41,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 7
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_get_word_returns_word",
                        "test_get_word_returns_nonempty_string",
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 20
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons"
                    ],
                    "production_statements": 7,
                    "test_statements": 37
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.46,
            "date": "2023-03-03 15:56:21+01:00"
        },
        "cbdd21ffd9f6d4c4b1e88518e006d471f81a83fe": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 9,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 11,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 41,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 7
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 22
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons"
                    ],
                    "production_statements": 7,
                    "test_statements": 37
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.4382716049382716,
            "date": "2023-03-03 16:47:29+01:00"
        },
        "768dccde3c6ff5adfb1b6f042fb17e06011d5591": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 9,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 55,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 7
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 7
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button"
                    ],
                    "production_statements": 7,
                    "test_statements": 51
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.42424242424242425,
            "date": "2023-03-03 18:24:20+01:00"
        },
        "33d94046b0ba4d67c23dcfc3e8c6bcb7e12d71b9": {
            "files": {
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 7,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\controller_test.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 7
                },
                "\\TDD-Hangman\\tests\\hangman_test.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\model_test.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative"
                    ],
                    "production_statements": 7,
                    "test_statements": 34
                },
                "\\TDD-Hangman\\tests\\view_test.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 7
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.5824175824175825,
            "date": "2023-03-03 19:13:16+01:00"
        },
        "82ec71d245e28b13beb069bdb6ced33d9c48a9e9": {
            "files": {
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 7,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\controller_test.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 7
                },
                "\\TDD-Hangman\\tests\\hangman_test.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\model_test.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative"
                    ],
                    "production_statements": 7,
                    "test_statements": 46
                },
                "\\TDD-Hangman\\tests\\view_test.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 7
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.6310679611650486,
            "date": "2023-03-03 19:18:26+01:00"
        },
        "c8e6fafc9df6bdff6bc2ca80c824eed6bbfe82ba": {
            "files": {
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 12,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\controller_test.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 7
                },
                "\\TDD-Hangman\\tests\\hangman_test.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\model_test.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative"
                    ],
                    "production_statements": 7,
                    "test_statements": 46
                },
                "\\TDD-Hangman\\tests\\view_test.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 7
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.6018518518518519,
            "date": "2023-03-03 19:20:05+01:00"
        },
        "59d58bb26e1f9e635581ba64310cc61b375b9871": {
            "files": {
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 12,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\controller_test.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 7
                },
                "\\TDD-Hangman\\tests\\hangman_test.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\model_test.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative"
                    ],
                    "production_statements": 7,
                    "test_statements": 46
                },
                "\\TDD-Hangman\\tests\\view_test.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 7
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.6018518518518519,
            "date": "2023-03-03 19:32:05+01:00"
        },
        "0bade80da9d8bd45cd8f07970eb3de4aab5007f0": {
            "files": {
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 12,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\controller_test.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 7
                },
                "\\TDD-Hangman\\tests\\hangman_test.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\model_test.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative"
                    ],
                    "production_statements": 7,
                    "test_statements": 46
                },
                "\\TDD-Hangman\\tests\\view_test.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 7
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.6018518518518519,
            "date": "2023-03-03 19:35:13+01:00"
        },
        "3cbd06c741160cccc532cd0fbbf24aead1eed1df": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 9,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 11,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 41,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 7
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 22
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons"
                    ],
                    "production_statements": 7,
                    "test_statements": 37
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.4382716049382716,
            "date": "2023-03-03 18:42:12+00:00"
        },
        "a83184b59bde8c24d781d0f305809021dfcdd6eb": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 9,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 11,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 55,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 7
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 22
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button"
                    ],
                    "production_statements": 7,
                    "test_statements": 51
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.4473684210526316,
            "date": "2023-03-03 18:45:13+00:00"
        },
        "311cde6172252dca144539342372c41cc9cda83d": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 9,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 22,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 55,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\model_test.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative"
                    ],
                    "production_statements": 7,
                    "test_statements": 46
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 7
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 22
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button"
                    ],
                    "production_statements": 7,
                    "test_statements": 51
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.515748031496063,
            "date": "2023-03-06 20:15:40+01:00"
        },
        "04ebcbcfef702b2a3e37e4888b96d6cd99782f5b": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 9,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 11,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 55,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 7
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect"
                    ],
                    "production_statements": 7,
                    "test_statements": 65
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button"
                    ],
                    "production_statements": 7,
                    "test_statements": 51
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.5493562231759657,
            "date": "2023-03-07 08:39:44+01:00"
        },
        "d4c83bce4b106e0eee0d84cdb9cc3b53b193fd57": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 9,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 18,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 55,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 7
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect"
                    ],
                    "production_statements": 7,
                    "test_statements": 65
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button"
                    ],
                    "production_statements": 7,
                    "test_statements": 51
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.5333333333333333,
            "date": "2023-03-07 08:42:19+01:00"
        },
        "e98d623846f1f27a29bef312b5a497f023bac3a9": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 9,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 11,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 55,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 7
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list"
                    ],
                    "production_statements": 7,
                    "test_statements": 51
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button"
                    ],
                    "production_statements": 7,
                    "test_statements": 51
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.5205479452054794,
            "date": "2023-03-07 09:36:48+01:00"
        },
        "d8b06ffce50fcbcc031cb39d67fc9fce33d620b3": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 9,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 20,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 55,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 7
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list"
                    ],
                    "production_statements": 7,
                    "test_statements": 51
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button"
                    ],
                    "production_statements": 7,
                    "test_statements": 51
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.5,
            "date": "2023-03-07 09:40:36+01:00"
        },
        "3453924009b95e5ce62a3c848034936fc34148c1": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 9,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 22,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 55,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\model_test.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative"
                    ],
                    "production_statements": 7,
                    "test_statements": 46
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 7
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 22
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button"
                    ],
                    "production_statements": 7,
                    "test_statements": 51
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.515748031496063,
            "date": "2023-03-07 09:58:28+00:00"
        },
        "197804efa83c55fa270c5197f427fe1afb64484e": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 9,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 27,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 55,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\model_test.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative"
                    ],
                    "production_statements": 7,
                    "test_statements": 46
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 7
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect"
                    ],
                    "production_statements": 7,
                    "test_statements": 65
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button"
                    ],
                    "production_statements": 7,
                    "test_statements": 51
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.5761589403973509,
            "date": "2023-03-07 11:22:20+01:00"
        },
        "2a99f1b87dba46d38058b6065ee7f454863a96d8": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 9,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 27,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 55,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\model_test.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative"
                    ],
                    "production_statements": 7,
                    "test_statements": 46
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 7
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect"
                    ],
                    "production_statements": 7,
                    "test_statements": 65
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button"
                    ],
                    "production_statements": 7,
                    "test_statements": 51
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.5761589403973509,
            "date": "2023-03-07 10:28:01+00:00"
        },
        "eb3b340a8d5c152487053a095562d80eca021d18": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 9,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 33,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 55,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 7
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative"
                    ],
                    "production_statements": 7,
                    "test_statements": 127
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button"
                    ],
                    "production_statements": 7,
                    "test_statements": 51
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.5993690851735016,
            "date": "2023-03-07 11:40:16+01:00"
        },
        "a2010efc665748bd5e4aea7261bf47cc65a8b7b1": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 9,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 1,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 33,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 55,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance"
                    ],
                    "production_statements": 7,
                    "test_statements": 7
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative"
                    ],
                    "production_statements": 7,
                    "test_statements": 127
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button"
                    ],
                    "production_statements": 7,
                    "test_statements": 51
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.5993690851735016,
            "date": "2023-03-08 12:06:06+00:00"
        },
        "75d21d98de107baba7081b1814fb7590e2c316f2": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 9,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 5,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 33,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 55,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view"
                    ],
                    "production_statements": 7,
                    "test_statements": 21
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative"
                    ],
                    "production_statements": 7,
                    "test_statements": 127
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button"
                    ],
                    "production_statements": 7,
                    "test_statements": 51
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.608955223880597,
            "date": "2023-03-08 13:30:37+01:00"
        },
        "b381357bbc6b642092f6bdca291b903453f66784": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 29,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 33,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 55,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view",
                        "test_has_play_method",
                        "test_has_exit_method"
                    ],
                    "production_statements": 7,
                    "test_statements": 35
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative"
                    ],
                    "production_statements": 7,
                    "test_statements": 127
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button"
                    ],
                    "production_statements": 7,
                    "test_statements": 51
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.5828877005347594,
            "date": "2023-03-08 14:04:44+01:00"
        },
        "c773f610abf428de0dca3d0222ac81b3608cc71d": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 29,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 33,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 55,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view",
                        "test_has_play_method",
                        "test_has_exit_method"
                    ],
                    "production_statements": 7,
                    "test_statements": 35
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative"
                    ],
                    "production_statements": 7,
                    "test_statements": 127
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button"
                    ],
                    "production_statements": 7,
                    "test_statements": 51
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.5828877005347594,
            "date": "2023-03-08 13:09:29+00:00"
        },
        "91d4da0a525222c0f0957f05820da0de719977f0": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 29,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 34,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 55,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view",
                        "test_has_play_method",
                        "test_has_exit_method"
                    ],
                    "production_statements": 7,
                    "test_statements": 35
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative",
                        "test_store_guessed_char_guessed_contains_letter",
                        "test_store_guessed_char_matched_contains_letter",
                        "test_store_guessed_char_matched_letter_count",
                        "test_store_guessed_char_matched_letter_index"
                    ],
                    "production_statements": 7,
                    "test_statements": 146
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button"
                    ],
                    "production_statements": 7,
                    "test_statements": 51
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.6015228426395939,
            "date": "2023-03-08 15:02:28+01:00"
        },
        "7e6d4fb8b07616efbfcf53599450e5903e1570eb": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 29,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 44,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 55,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view",
                        "test_has_play_method",
                        "test_has_exit_method"
                    ],
                    "production_statements": 7,
                    "test_statements": 35
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_has_target_word",
                        "test_has_word_progress",
                        "test_has_guessed_characters",
                        "test_has_max_guesses",
                        "test_has_guesses",
                        "test_start_game",
                        "test_game_over",
                        "test_victory",
                        "test_game_over_works",
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative"
                    ],
                    "production_statements": 7,
                    "test_statements": 179
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button"
                    ],
                    "production_statements": 7,
                    "test_statements": 51
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.6178489702517163,
            "date": "2023-03-08 15:03:57+01:00"
        },
        "2bd9b38edef698a4d5e933ac33a931604b79c1f3": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 29,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 44,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 55,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view",
                        "test_has_play_method",
                        "test_has_exit_method"
                    ],
                    "production_statements": 7,
                    "test_statements": 35
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_has_target_word",
                        "test_has_word_progress",
                        "test_has_guessed_characters",
                        "test_has_max_guesses",
                        "test_has_guesses",
                        "test_start_game",
                        "test_game_over",
                        "test_victory",
                        "test_game_over_works",
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative"
                    ],
                    "production_statements": 7,
                    "test_statements": 179
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button"
                    ],
                    "production_statements": 7,
                    "test_statements": 51
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.6178489702517163,
            "date": "2023-03-08 14:08:29+00:00"
        },
        "888a3fb77badc535928e14aaecef2561a66264b6": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 29,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 45,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 55,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view",
                        "test_has_play_method",
                        "test_has_exit_method"
                    ],
                    "production_statements": 7,
                    "test_statements": 35
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_has_target_word",
                        "test_has_word_progress",
                        "test_has_guessed_characters",
                        "test_has_max_guesses",
                        "test_has_guesses",
                        "test_start_game",
                        "test_game_over",
                        "test_victory",
                        "test_game_over_works",
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative",
                        "test_store_guessed_char_guessed_contains_letter",
                        "test_store_guessed_char_matched_contains_letter",
                        "test_store_guessed_char_matched_letter_count",
                        "test_store_guessed_char_matched_letter_index"
                    ],
                    "production_statements": 7,
                    "test_statements": 198
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button"
                    ],
                    "production_statements": 7,
                    "test_statements": 51
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.6323851203501094,
            "date": "2023-03-08 15:12:25+01:00"
        },
        "51412591a1f321104b8cf075709384da43c65807": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 29,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 48,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 55,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view",
                        "test_has_play_method",
                        "test_has_exit_method"
                    ],
                    "production_statements": 7,
                    "test_statements": 35
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_has_target_word",
                        "test_has_word_progress",
                        "test_has_guessed_characters",
                        "test_has_max_guesses",
                        "test_has_guesses",
                        "test_start_game",
                        "test_game_over",
                        "test_victory",
                        "test_game_over_works",
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative",
                        "test_generate_word_list"
                    ],
                    "production_statements": 7,
                    "test_statements": 189
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button"
                    ],
                    "production_statements": 7,
                    "test_statements": 51
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.6208425720620843,
            "date": "2023-03-08 16:18:07+01:00"
        },
        "377eec5e47e991f04bb1088421804eef64a48175": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 29,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 45,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 55,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view",
                        "test_has_play_method",
                        "test_has_exit_method"
                    ],
                    "production_statements": 7,
                    "test_statements": 35
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_has_target_word",
                        "test_has_word_progress",
                        "test_has_guessed_characters",
                        "test_has_max_guesses",
                        "test_has_guesses",
                        "test_start_game",
                        "test_game_over",
                        "test_victory",
                        "test_game_over_works",
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative",
                        "test_store_guessed_char_guessed_contains_letter",
                        "test_store_guessed_char_matched_contains_letter",
                        "test_store_guessed_char_matched_letter_count",
                        "test_store_guessed_char_matched_letter_count_none",
                        "test_store_guessed_char_matched_letter_index"
                    ],
                    "production_statements": 7,
                    "test_statements": 223
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button"
                    ],
                    "production_statements": 7,
                    "test_statements": 51
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.6514522821576764,
            "date": "2023-03-08 16:48:46+01:00"
        },
        "5e2cd300567559c70d8341ba467e906704df2b3e": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 29,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 50,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 55,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view",
                        "test_has_play_method",
                        "test_has_exit_method"
                    ],
                    "production_statements": 7,
                    "test_statements": 35
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_has_target_word",
                        "test_has_word_progress",
                        "test_has_guessed_characters",
                        "test_has_max_guesses",
                        "test_has_guesses",
                        "test_start_game",
                        "test_game_over",
                        "test_victory",
                        "test_game_over_works",
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative",
                        "test_store_guessed_char_guessed_contains_letter",
                        "test_store_guessed_char_matched_contains_letter",
                        "test_store_guessed_char_matched_letter_count",
                        "test_store_guessed_char_matched_letter_count_none",
                        "test_store_guessed_char_matched_letter_index"
                    ],
                    "production_statements": 7,
                    "test_statements": 223
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button"
                    ],
                    "production_statements": 7,
                    "test_statements": 51
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.6447638603696099,
            "date": "2023-03-08 16:50:44+01:00"
        },
        "9062327f67f755b79643235772cc9b6067e1e694": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 29,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 50,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 55,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view",
                        "test_has_play_method",
                        "test_has_exit_method"
                    ],
                    "production_statements": 7,
                    "test_statements": 35
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_has_target_word",
                        "test_has_word_progress",
                        "test_has_guessed_characters",
                        "test_has_max_guesses",
                        "test_has_guesses",
                        "test_start_game",
                        "test_game_over",
                        "test_victory",
                        "test_game_over_works",
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative",
                        "test_store_guessed_char_guessed_contains_letter",
                        "test_store_guessed_char_matched_contains_letter",
                        "test_store_guessed_char_matched_letter_count",
                        "test_store_guessed_char_matched_letter_count_none",
                        "test_store_guessed_char_matched_letter_index",
                        "test_make_guess_char_returns_word_progress_no_match",
                        "test_make_guess_char_increments_guesses_counter_no_match",
                        "test_make_guess_char_returns_updated_word_progress_match",
                        "test_make_guess_char_guesses_counter_match",
                        "test_make_guess_word_set_guesses_counter_to_max_on_no_match",
                        "test_make_guess_word_fills_word_progress_on_match"
                    ],
                    "production_statements": 7,
                    "test_statements": 290
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button"
                    ],
                    "production_statements": 7,
                    "test_statements": 51
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.6877256317689531,
            "date": "2023-03-09 13:49:13+01:00"
        },
        "4dde35d8ccfff12df858d86e35b99ad71fb66b01": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 29,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 62,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 55,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view",
                        "test_has_play_method",
                        "test_has_exit_method"
                    ],
                    "production_statements": 7,
                    "test_statements": 35
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_has_target_word",
                        "test_has_word_progress",
                        "test_has_guessed_characters",
                        "test_has_max_guesses",
                        "test_has_guesses",
                        "test_start_game",
                        "test_game_over",
                        "test_victory",
                        "test_game_over_works",
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative",
                        "test_store_guessed_char_guessed_contains_letter",
                        "test_store_guessed_char_matched_contains_letter",
                        "test_store_guessed_char_matched_letter_count",
                        "test_store_guessed_char_matched_letter_count_none",
                        "test_store_guessed_char_matched_letter_index",
                        "test_make_guess_char_returns_word_progress_no_match",
                        "test_make_guess_char_increments_guesses_counter_no_match",
                        "test_make_guess_char_returns_updated_word_progress_match",
                        "test_make_guess_char_guesses_counter_match",
                        "test_make_guess_word_set_guesses_counter_to_max_on_no_match",
                        "test_make_guess_word_fills_word_progress_on_match"
                    ],
                    "production_statements": 7,
                    "test_statements": 290
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button"
                    ],
                    "production_statements": 7,
                    "test_statements": 51
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.6731448763250883,
            "date": "2023-03-09 14:04:37+01:00"
        },
        "8759902cec68abcd4bafc0a21f848aee4ce5f4a9": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 29,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 62,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 55,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view",
                        "test_has_play_method",
                        "test_has_exit_method"
                    ],
                    "production_statements": 7,
                    "test_statements": 35
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_has_target_word",
                        "test_has_word_progress",
                        "test_has_guessed_characters",
                        "test_has_max_guesses",
                        "test_has_guesses",
                        "test_start_game",
                        "test_game_over",
                        "test_victory",
                        "test_game_over_works",
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative",
                        "test_store_guessed_char_guessed_contains_letter",
                        "test_store_guessed_char_matched_contains_letter",
                        "test_store_guessed_char_matched_letter_count",
                        "test_store_guessed_char_matched_letter_count_none",
                        "test_store_guessed_char_matched_letter_index",
                        "test_make_guess_char_returns_word_progress_no_match",
                        "test_make_guess_char_increments_guesses_counter_no_match",
                        "test_make_guess_char_returns_updated_word_progress_match",
                        "test_make_guess_char_guesses_counter_match",
                        "test_make_guess_word_set_guesses_counter_to_max_on_no_match",
                        "test_make_guess_word_fills_word_progress_on_match"
                    ],
                    "production_statements": 7,
                    "test_statements": 290
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button"
                    ],
                    "production_statements": 7,
                    "test_statements": 51
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.6731448763250883,
            "date": "2023-03-09 13:13:33+00:00"
        },
        "965a57608b73b70f1a9e515581bb0ea2cf250453": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 31,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 48,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 95,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view",
                        "test_has_play_method",
                        "test_has_exit_method"
                    ],
                    "production_statements": 7,
                    "test_statements": 35
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_has_target_word",
                        "test_has_word_progress",
                        "test_has_guessed_characters",
                        "test_has_max_guesses",
                        "test_has_guesses",
                        "test_start_game",
                        "test_game_over",
                        "test_victory",
                        "test_game_over_works",
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative",
                        "test_generate_word_list"
                    ],
                    "production_statements": 7,
                    "test_statements": 189
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button",
                        "test_setup_input_field",
                        "test_draw_game_frame",
                        "test_display_hanging_image",
                        "test_display_word",
                        "test_setup_input_field_instance",
                        "test_word_label_instance",
                        "test_word_label_length",
                        "test_display_word_characteristics"
                    ],
                    "production_statements": 8,
                    "test_statements": 113
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.6151079136690647,
            "date": "2023-03-09 14:52:03+01:00"
        },
        "e34ca2b4a5b854f004d3b6edeca6b35f3d449b64": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 31,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 66,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 95,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view",
                        "test_has_play_method",
                        "test_has_exit_method"
                    ],
                    "production_statements": 7,
                    "test_statements": 35
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_has_target_word",
                        "test_has_word_progress",
                        "test_has_guessed_characters",
                        "test_has_max_guesses",
                        "test_has_guesses",
                        "test_start_game",
                        "test_game_over",
                        "test_victory",
                        "test_game_over_works",
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative",
                        "test_generate_word_list",
                        "test_store_guessed_char_guessed_contains_letter",
                        "test_store_guessed_char_matched_contains_letter",
                        "test_store_guessed_char_matched_letter_count",
                        "test_store_guessed_char_matched_letter_count_none",
                        "test_store_guessed_char_matched_letter_index",
                        "test_make_guess_char_returns_word_progress_no_match",
                        "test_make_guess_char_increments_guesses_counter_no_match",
                        "test_make_guess_char_returns_updated_word_progress_match",
                        "test_make_guess_char_guesses_counter_match",
                        "test_make_guess_word_set_guesses_counter_to_max_on_no_match",
                        "test_make_guess_word_fills_word_progress_on_match"
                    ],
                    "production_statements": 7,
                    "test_statements": 300
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button",
                        "test_setup_input_field",
                        "test_draw_game_frame",
                        "test_display_hanging_image",
                        "test_display_word",
                        "test_setup_input_field_instance",
                        "test_word_label_instance",
                        "test_word_label_length",
                        "test_display_word_characteristics"
                    ],
                    "production_statements": 8,
                    "test_statements": 113
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.6613138686131387,
            "date": "2023-03-09 15:01:27+01:00"
        },
        "08664ef062cabc5b37b3554113f60efeb6dad706": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 31,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 66,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 95,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view",
                        "test_has_play_method",
                        "test_has_exit_method"
                    ],
                    "production_statements": 7,
                    "test_statements": 35
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_has_target_word",
                        "test_has_word_progress",
                        "test_has_guessed_characters",
                        "test_has_max_guesses",
                        "test_has_guesses",
                        "test_start_game",
                        "test_game_over",
                        "test_victory",
                        "test_game_over_works",
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative",
                        "test_generate_word_list",
                        "test_store_guessed_char_guessed_contains_letter",
                        "test_store_guessed_char_matched_contains_letter",
                        "test_store_guessed_char_matched_letter_count",
                        "test_store_guessed_char_matched_letter_count_none",
                        "test_store_guessed_char_matched_letter_index",
                        "test_make_guess_char_returns_word_progress_no_match",
                        "test_make_guess_char_increments_guesses_counter_no_match",
                        "test_make_guess_char_returns_updated_word_progress_match",
                        "test_make_guess_char_guesses_counter_match",
                        "test_make_guess_word_set_guesses_counter_to_max_on_no_match",
                        "test_make_guess_word_fills_word_progress_on_match"
                    ],
                    "production_statements": 7,
                    "test_statements": 300
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button",
                        "test_setup_input_field",
                        "test_draw_game_frame",
                        "test_display_hanging_image",
                        "test_display_word",
                        "test_setup_input_field_instance",
                        "test_word_label_instance",
                        "test_word_label_length",
                        "test_display_word_characteristics"
                    ],
                    "production_statements": 8,
                    "test_statements": 113
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.6613138686131387,
            "date": "2023-03-09 14:09:48+00:00"
        },
        "42d45d31db3f3c93520ea65f0b12fd0aedbccab0": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 31,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 66,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 95,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view",
                        "test_has_play_method",
                        "test_has_exit_method"
                    ],
                    "production_statements": 7,
                    "test_statements": 35
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_has_target_word",
                        "test_has_word_progress",
                        "test_has_guessed_characters",
                        "test_has_max_guesses",
                        "test_has_guesses",
                        "test_start_game",
                        "test_game_over",
                        "test_victory",
                        "test_game_over_works",
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative",
                        "test_generate_word_list",
                        "test_store_guessed_char_guessed_contains_letter",
                        "test_store_guessed_char_matched_contains_letter",
                        "test_store_guessed_char_matched_letter_count",
                        "test_store_guessed_char_matched_letter_count_none",
                        "test_store_guessed_char_matched_letter_index",
                        "test_make_guess_char_returns_word_progress_no_match",
                        "test_make_guess_char_increments_guesses_counter_no_match",
                        "test_make_guess_char_returns_updated_word_progress_match",
                        "test_make_guess_char_guesses_counter_match",
                        "test_make_guess_word_set_guesses_counter_to_max_on_no_match",
                        "test_make_guess_word_fills_word_progress_on_match"
                    ],
                    "production_statements": 7,
                    "test_statements": 300
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button",
                        "test_setup_input_field",
                        "test_draw_game_frame",
                        "test_display_hanging_image",
                        "test_display_word",
                        "test_setup_input_field_instance",
                        "test_word_label_instance",
                        "test_word_label_length",
                        "test_display_word_characteristics"
                    ],
                    "production_statements": 8,
                    "test_statements": 113
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.6613138686131387,
            "date": "2023-03-09 15:59:34+01:00"
        },
        "031e73d203e47890025766e4d817b38807aeb1d3": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 31,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 66,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 95,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view",
                        "test_has_play_method",
                        "test_has_exit_method"
                    ],
                    "production_statements": 7,
                    "test_statements": 35
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_has_target_word",
                        "test_has_word_progress",
                        "test_has_guessed_characters",
                        "test_has_max_guesses",
                        "test_has_guesses",
                        "test_start_game",
                        "test_game_over",
                        "test_victory",
                        "test_game_over_works",
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative",
                        "test_generate_word_list",
                        "test_store_guessed_char_guessed_contains_letter",
                        "test_store_guessed_char_matched_contains_letter",
                        "test_store_guessed_char_matched_letter_count",
                        "test_store_guessed_char_matched_letter_count_none",
                        "test_store_guessed_char_matched_letter_index",
                        "test_make_guess_char_returns_word_progress_no_match",
                        "test_make_guess_char_increments_guesses_counter_no_match",
                        "test_make_guess_char_returns_updated_word_progress_match",
                        "test_make_guess_char_guesses_counter_match",
                        "test_make_guess_word_set_guesses_counter_to_max_on_no_match",
                        "test_make_guess_word_fills_word_progress_on_match"
                    ],
                    "production_statements": 7,
                    "test_statements": 300
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button",
                        "test_setup_input_field",
                        "test_draw_game_frame",
                        "test_display_hanging_image",
                        "test_display_word",
                        "test_setup_input_field_instance",
                        "test_word_label_instance",
                        "test_word_label_length",
                        "test_display_word_characteristics"
                    ],
                    "production_statements": 8,
                    "test_statements": 113
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.6613138686131387,
            "date": "2023-03-09 15:44:11+00:00"
        },
        "7be1e3aa63376c208d2bd63af464106bef1764a4": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 50,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 68,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 99,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_has_target_word",
                        "test_has_word_progress",
                        "test_has_guessed_characters",
                        "test_has_max_guesses",
                        "test_has_guesses",
                        "test_start_game",
                        "test_game_over",
                        "test_victory",
                        "test_game_over_works",
                        "test_victory_works",
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative",
                        "test_generate_word_list",
                        "test_store_guessed_char_guessed_contains_letter",
                        "test_store_guessed_char_matched_contains_letter",
                        "test_store_guessed_char_matched_letter_count",
                        "test_store_guessed_char_matched_letter_count_none",
                        "test_store_guessed_char_matched_letter_index",
                        "test_make_guess_char_returns_word_progress_no_match",
                        "test_make_guess_char_increments_guesses_counter_no_match",
                        "test_make_guess_char_returns_updated_word_progress_match",
                        "test_make_guess_char_guesses_counter_match",
                        "test_make_guess_word_set_guesses_counter_to_max_on_no_match",
                        "test_make_guess_word_fills_word_progress_on_match"
                    ],
                    "production_statements": 7,
                    "test_statements": 309
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button",
                        "test_setup_input_field",
                        "test_draw_game_frame",
                        "test_display_hanging_image",
                        "test_display_word",
                        "test_setup_input_field_instance",
                        "test_word_label_instance",
                        "test_word_label_length",
                        "test_display_word_characteristics"
                    ],
                    "production_statements": 8,
                    "test_statements": 113
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.6307237813884786,
            "date": "2023-03-09 18:01:22+01:00"
        },
        "6add8ddcaa95d7e4ad783b656befbcf8583bb45e": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 50,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 68,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 99,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view",
                        "test_has_play_method",
                        "test_has_exit_method",
                        "test_input_works"
                    ],
                    "production_statements": 9,
                    "test_statements": 54
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_has_target_word",
                        "test_has_word_progress",
                        "test_has_guessed_characters",
                        "test_has_max_guesses",
                        "test_has_guesses",
                        "test_start_game",
                        "test_game_over",
                        "test_victory",
                        "test_game_over_works",
                        "test_victory_works",
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative",
                        "test_generate_word_list",
                        "test_store_guessed_char_guessed_contains_letter",
                        "test_store_guessed_char_matched_contains_letter",
                        "test_store_guessed_char_matched_letter_count",
                        "test_store_guessed_char_matched_letter_count_none",
                        "test_store_guessed_char_matched_letter_index",
                        "test_make_guess_char_returns_word_progress_no_match",
                        "test_make_guess_char_increments_guesses_counter_no_match",
                        "test_make_guess_char_returns_updated_word_progress_match",
                        "test_make_guess_char_guesses_counter_match",
                        "test_make_guess_word_set_guesses_counter_to_max_on_no_match",
                        "test_make_guess_word_fills_word_progress_on_match"
                    ],
                    "production_statements": 7,
                    "test_statements": 309
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button",
                        "test_setup_input_field",
                        "test_draw_game_frame",
                        "test_display_hanging_image",
                        "test_display_word",
                        "test_setup_input_field_instance",
                        "test_word_label_instance",
                        "test_word_label_length",
                        "test_display_word_characteristics"
                    ],
                    "production_statements": 8,
                    "test_statements": 113
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.65,
            "date": "2023-03-10 14:08:33+01:00"
        },
        "05fb3d4ad7c4c838bf9676ba15d1d6152aeabbea": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 50,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 68,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 99,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view",
                        "test_has_play_method",
                        "test_has_exit_method",
                        "test_input_works"
                    ],
                    "production_statements": 9,
                    "test_statements": 54
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_has_target_word",
                        "test_has_word_progress",
                        "test_has_guessed_characters",
                        "test_has_max_guesses",
                        "test_has_guesses",
                        "test_start_game",
                        "test_game_over",
                        "test_victory",
                        "test_game_over_works",
                        "test_victory_works",
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative",
                        "test_generate_word_list",
                        "test_store_guessed_char_guessed_contains_letter",
                        "test_store_guessed_char_matched_contains_letter",
                        "test_store_guessed_char_matched_letter_count",
                        "test_store_guessed_char_matched_letter_count_none",
                        "test_store_guessed_char_matched_letter_index",
                        "test_make_guess_char_returns_word_progress_no_match",
                        "test_make_guess_char_increments_guesses_counter_no_match",
                        "test_make_guess_char_returns_updated_word_progress_match",
                        "test_make_guess_char_guesses_counter_match",
                        "test_make_guess_word_set_guesses_counter_to_max_on_no_match",
                        "test_make_guess_word_fills_word_progress_on_match"
                    ],
                    "production_statements": 7,
                    "test_statements": 309
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button",
                        "test_setup_input_field",
                        "test_draw_game_frame",
                        "test_display_hanging_image",
                        "test_display_word",
                        "test_setup_input_field_instance",
                        "test_word_label_instance",
                        "test_word_label_length",
                        "test_display_word_characteristics"
                    ],
                    "production_statements": 8,
                    "test_statements": 113
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.65,
            "date": "2023-03-10 13:17:33+00:00"
        },
        "31746f181b1fbee10a60c433ba42ecd31eb90bc4": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 31,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 67,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 95,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view",
                        "test_has_play_method",
                        "test_has_exit_method"
                    ],
                    "production_statements": 7,
                    "test_statements": 35
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_has_target_word",
                        "test_has_word_progress",
                        "test_has_guessed_characters",
                        "test_has_max_guesses",
                        "test_has_guesses",
                        "test_start_game",
                        "test_game_over",
                        "test_victory",
                        "test_game_over_works",
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative",
                        "test_generate_word_list",
                        "test_store_guessed_char_guessed_contains_letter",
                        "test_store_guessed_char_matched_contains_letter",
                        "test_store_guessed_char_matched_letter_count",
                        "test_store_guessed_char_matched_letter_count_none",
                        "test_store_guessed_char_matched_letter_index",
                        "test_make_guess_char_returns_word_progress_no_match",
                        "test_make_guess_char_increments_guesses_counter_no_match",
                        "test_make_guess_char_returns_updated_word_progress_match",
                        "test_make_guess_char_guesses_counter_match",
                        "test_make_guess_word_set_guesses_counter_to_max_on_no_match",
                        "test_make_guess_word_fills_word_progress_on_match",
                        "test_make_guess_char_already_guessed"
                    ],
                    "production_statements": 7,
                    "test_statements": 307
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button",
                        "test_setup_input_field",
                        "test_draw_game_frame",
                        "test_display_hanging_image",
                        "test_display_word",
                        "test_setup_input_field_instance",
                        "test_word_label_instance",
                        "test_word_label_length",
                        "test_display_word_characteristics"
                    ],
                    "production_statements": 8,
                    "test_statements": 113
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.6637806637806638,
            "date": "2023-03-10 14:24:57+01:00"
        },
        "1f9a78982ebd9b5b5986d2686b6a16206cae4033": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 50,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 67,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 99,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view",
                        "test_has_play_method",
                        "test_has_exit_method",
                        "test_input_works"
                    ],
                    "production_statements": 9,
                    "test_statements": 54
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_has_target_word",
                        "test_has_word_progress",
                        "test_has_guessed_characters",
                        "test_has_max_guesses",
                        "test_has_guesses",
                        "test_start_game",
                        "test_game_over",
                        "test_victory",
                        "test_game_over_works",
                        "test_victory_works",
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative",
                        "test_generate_word_list",
                        "test_store_guessed_char_guessed_contains_letter",
                        "test_store_guessed_char_matched_contains_letter",
                        "test_store_guessed_char_matched_letter_count",
                        "test_store_guessed_char_matched_letter_count_none",
                        "test_store_guessed_char_matched_letter_index",
                        "test_make_guess_char_returns_word_progress_no_match",
                        "test_make_guess_char_increments_guesses_counter_no_match",
                        "test_make_guess_char_returns_updated_word_progress_match",
                        "test_make_guess_char_guesses_counter_match",
                        "test_make_guess_word_set_guesses_counter_to_max_on_no_match",
                        "test_make_guess_word_fills_word_progress_on_match"
                    ],
                    "production_statements": 7,
                    "test_statements": 312
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button",
                        "test_setup_input_field",
                        "test_draw_game_frame",
                        "test_display_hanging_image",
                        "test_display_word",
                        "test_setup_input_field_instance",
                        "test_word_label_instance",
                        "test_word_label_length",
                        "test_display_word_characteristics"
                    ],
                    "production_statements": 8,
                    "test_statements": 113
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.6522911051212938,
            "date": "2023-03-10 14:38:36+01:00"
        },
        "6abc4d5b408998f28cd3b99206a255d0384cdb45": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 50,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 67,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 99,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view",
                        "test_has_play_method",
                        "test_has_exit_method",
                        "test_input_works"
                    ],
                    "production_statements": 9,
                    "test_statements": 54
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_has_target_word",
                        "test_has_word_progress",
                        "test_has_guessed_characters",
                        "test_has_max_guesses",
                        "test_has_guesses",
                        "test_start_game",
                        "test_game_over",
                        "test_victory",
                        "test_game_over_works",
                        "test_victory_works",
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative",
                        "test_generate_word_list",
                        "test_store_guessed_char_guessed_contains_letter",
                        "test_store_guessed_char_matched_contains_letter",
                        "test_store_guessed_char_matched_letter_count",
                        "test_store_guessed_char_matched_letter_count_none",
                        "test_store_guessed_char_matched_letter_index",
                        "test_make_guess_char_returns_word_progress_no_match",
                        "test_make_guess_char_increments_guesses_counter_no_match",
                        "test_make_guess_char_returns_updated_word_progress_match",
                        "test_make_guess_char_guesses_counter_match",
                        "test_make_guess_word_set_guesses_counter_to_max_on_no_match",
                        "test_make_guess_word_fills_word_progress_on_match"
                    ],
                    "production_statements": 7,
                    "test_statements": 312
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button",
                        "test_setup_input_field",
                        "test_draw_game_frame",
                        "test_display_hanging_image",
                        "test_display_word",
                        "test_setup_input_field_instance",
                        "test_word_label_instance",
                        "test_word_label_length",
                        "test_display_word_characteristics"
                    ],
                    "production_statements": 8,
                    "test_statements": 113
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.6522911051212938,
            "date": "2023-03-10 13:39:55+00:00"
        },
        "569433c23d62c3a54a241b67f11107ef3cb634ac": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 50,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 68,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 99,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view",
                        "test_has_play_method",
                        "test_has_exit_method",
                        "test_input_works"
                    ],
                    "production_statements": 9,
                    "test_statements": 54
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_has_target_word",
                        "test_has_word_progress",
                        "test_has_guessed_characters",
                        "test_has_max_guesses",
                        "test_has_guesses",
                        "test_start_game",
                        "test_game_over",
                        "test_victory",
                        "test_game_over_works",
                        "test_victory_works",
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative",
                        "test_generate_word_list",
                        "test_store_guessed_char_guessed_contains_letter",
                        "test_store_guessed_char_matched_contains_letter",
                        "test_store_guessed_char_matched_letter_count",
                        "test_store_guessed_char_matched_letter_count_none",
                        "test_store_guessed_char_matched_letter_index",
                        "test_make_guess_char_returns_word_progress_no_match",
                        "test_make_guess_char_increments_guesses_counter_no_match",
                        "test_make_guess_char_returns_updated_word_progress_match",
                        "test_make_guess_char_guesses_counter_match",
                        "test_make_guess_word_set_guesses_counter_to_max_on_no_match",
                        "test_make_guess_word_fills_word_progress_on_match",
                        "test_make_guess_char_already_guessed"
                    ],
                    "production_statements": 7,
                    "test_statements": 319
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button",
                        "test_setup_input_field",
                        "test_draw_game_frame",
                        "test_display_hanging_image",
                        "test_display_word",
                        "test_setup_input_field_instance",
                        "test_word_label_instance",
                        "test_word_label_length",
                        "test_display_word_characteristics"
                    ],
                    "production_statements": 8,
                    "test_statements": 113
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.6546666666666666,
            "date": "2023-03-10 13:40:44+00:00"
        },
        "0e80487b75dccc57f334486869381a21f3783d0e": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 58,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 77,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 99,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view",
                        "test_has_play_method",
                        "test_has_exit_method",
                        "test_input_works"
                    ],
                    "production_statements": 9,
                    "test_statements": 54
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_has_target_word",
                        "test_has_word_progress",
                        "test_has_guessed_characters",
                        "test_has_max_guesses",
                        "test_has_guesses",
                        "test_start_game",
                        "test_game_over",
                        "test_victory",
                        "test_game_over_works",
                        "test_victory_works",
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative",
                        "test_generate_word_list",
                        "test_store_guessed_char_guessed_contains_letter",
                        "test_store_guessed_char_matched_contains_letter",
                        "test_store_guessed_char_matched_letter_count",
                        "test_store_guessed_char_matched_letter_count_none",
                        "test_store_guessed_char_matched_letter_index",
                        "test_make_guess_char_returns_word_progress_no_match",
                        "test_make_guess_char_increments_guesses_counter_no_match",
                        "test_make_guess_char_returns_updated_word_progress_match",
                        "test_make_guess_char_guesses_counter_match",
                        "test_make_guess_word_set_guesses_counter_to_max_on_no_match",
                        "test_make_guess_word_fills_word_progress_on_match",
                        "test_make_guess_char_already_guessed"
                    ],
                    "production_statements": 7,
                    "test_statements": 317
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button",
                        "test_setup_input_field",
                        "test_draw_game_frame",
                        "test_display_hanging_image",
                        "test_display_word",
                        "test_setup_input_field_instance",
                        "test_word_label_instance",
                        "test_word_label_length",
                        "test_display_word_characteristics"
                    ],
                    "production_statements": 8,
                    "test_statements": 113
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.6392156862745098,
            "date": "2023-03-10 15:34:53+01:00"
        },
        "61079905452a07e2e70a4a8559d71be2c46087ff": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 58,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 77,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 99,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view",
                        "test_has_play_method",
                        "test_has_exit_method",
                        "test_input_works"
                    ],
                    "production_statements": 9,
                    "test_statements": 54
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_has_target_word",
                        "test_has_word_progress",
                        "test_has_guessed_characters",
                        "test_has_max_guesses",
                        "test_has_guesses",
                        "test_start_game",
                        "test_game_over",
                        "test_victory",
                        "test_game_over_works",
                        "test_victory_works",
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative",
                        "test_generate_word_list",
                        "test_store_guessed_char_guessed_contains_letter",
                        "test_store_guessed_char_matched_contains_letter",
                        "test_store_guessed_char_matched_letter_count",
                        "test_store_guessed_char_matched_letter_count_none",
                        "test_store_guessed_char_matched_letter_index",
                        "test_make_guess_char_returns_word_progress_no_match",
                        "test_make_guess_char_increments_guesses_counter_no_match",
                        "test_make_guess_char_returns_updated_word_progress_match",
                        "test_make_guess_char_guesses_counter_match",
                        "test_make_guess_word_set_guesses_counter_to_max_on_no_match",
                        "test_make_guess_word_fills_word_progress_on_match",
                        "test_make_guess_char_already_guessed"
                    ],
                    "production_statements": 7,
                    "test_statements": 317
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button",
                        "test_setup_input_field",
                        "test_draw_game_frame",
                        "test_display_hanging_image",
                        "test_display_word",
                        "test_setup_input_field_instance",
                        "test_word_label_instance",
                        "test_word_label_length",
                        "test_display_word_characteristics"
                    ],
                    "production_statements": 8,
                    "test_statements": 113
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.6392156862745098,
            "date": "2023-03-10 14:41:04+00:00"
        },
        "26a9d58a0f569eff76da77fb4232fda30cd9df3b": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 79,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 70,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 105,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view",
                        "test_has_play_method",
                        "test_has_exit_method",
                        "test_input_works"
                    ],
                    "production_statements": 9,
                    "test_statements": 54
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_has_target_word",
                        "test_has_word_progress",
                        "test_has_guessed_characters",
                        "test_has_max_guesses",
                        "test_has_guesses",
                        "test_start_game",
                        "test_game_over",
                        "test_victory",
                        "test_game_over_works",
                        "test_victory_works",
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative",
                        "test_generate_word_list",
                        "test_store_guessed_char_guessed_contains_letter",
                        "test_store_guessed_char_matched_contains_letter",
                        "test_store_guessed_char_matched_letter_count",
                        "test_store_guessed_char_matched_letter_count_none",
                        "test_store_guessed_char_matched_letter_index",
                        "test_make_guess_char_returns_word_progress_no_match",
                        "test_make_guess_char_increments_guesses_counter_no_match",
                        "test_make_guess_char_returns_updated_word_progress_match",
                        "test_make_guess_char_guesses_counter_match",
                        "test_make_guess_word_set_guesses_counter_to_max_on_no_match",
                        "test_make_guess_word_fills_word_progress_on_match",
                        "test_make_guess_char_already_guessed"
                    ],
                    "production_statements": 7,
                    "test_statements": 319
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button",
                        "test_setup_input_field",
                        "test_draw_game_frame",
                        "test_display_hanging_image",
                        "test_display_word",
                        "test_display_message",
                        "test_display_message_displayed",
                        "test_word_label_instance",
                        "test_setup_input_field_instance",
                        "test_word_label_instance_label",
                        "test_word_label_length",
                        "test_display_word_characteristics"
                    ],
                    "production_statements": 8,
                    "test_statements": 136
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.6345679012345679,
            "date": "2023-03-10 17:23:00+01:00"
        },
        "4704866b36e4a662875add351e479b9690aca123": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 87,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 79,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 105,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view",
                        "test_has_play_method",
                        "test_has_exit_method",
                        "test_input_works"
                    ],
                    "production_statements": 9,
                    "test_statements": 54
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_has_target_word",
                        "test_has_word_progress",
                        "test_has_guessed_characters",
                        "test_has_max_guesses",
                        "test_has_guesses",
                        "test_start_game",
                        "test_game_over",
                        "test_victory",
                        "test_game_over_works",
                        "test_victory_works",
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative",
                        "test_generate_word_list",
                        "test_store_guessed_char_guessed_contains_letter",
                        "test_store_guessed_char_matched_contains_letter",
                        "test_store_guessed_char_matched_letter_count",
                        "test_store_guessed_char_matched_letter_count_none",
                        "test_store_guessed_char_matched_letter_index",
                        "test_make_guess_char_returns_word_progress_no_match",
                        "test_make_guess_char_increments_guesses_counter_no_match",
                        "test_make_guess_char_returns_updated_word_progress_match",
                        "test_make_guess_char_guesses_counter_match",
                        "test_make_guess_word_set_guesses_counter_to_max_on_no_match",
                        "test_make_guess_word_fills_word_progress_on_match",
                        "test_make_guess_char_already_guessed"
                    ],
                    "production_statements": 7,
                    "test_statements": 317
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button",
                        "test_setup_input_field",
                        "test_draw_game_frame",
                        "test_display_hanging_image",
                        "test_display_word",
                        "test_display_message",
                        "test_display_message_displayed",
                        "test_word_label_instance",
                        "test_setup_input_field_instance",
                        "test_word_label_instance_label",
                        "test_word_label_length",
                        "test_display_word_characteristics"
                    ],
                    "production_statements": 8,
                    "test_statements": 136
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.6206060606060606,
            "date": "2023-03-10 17:34:35+01:00"
        },
        "843c105b9a7d87d5c7ee51752c0e4dcc58deb3fe": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 87,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 79,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 105,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view",
                        "test_has_play_method",
                        "test_has_exit_method",
                        "test_input_works"
                    ],
                    "production_statements": 9,
                    "test_statements": 54
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_has_target_word",
                        "test_has_word_progress",
                        "test_has_guessed_characters",
                        "test_has_max_guesses",
                        "test_has_guesses",
                        "test_start_game",
                        "test_game_over",
                        "test_victory",
                        "test_game_over_works",
                        "test_victory_works",
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative",
                        "test_generate_word_list",
                        "test_store_guessed_char_guessed_contains_letter",
                        "test_store_guessed_char_matched_contains_letter",
                        "test_store_guessed_char_matched_letter_count",
                        "test_store_guessed_char_matched_letter_count_none",
                        "test_store_guessed_char_matched_letter_index",
                        "test_make_guess_char_returns_word_progress_no_match",
                        "test_make_guess_char_increments_guesses_counter_no_match",
                        "test_make_guess_char_returns_updated_word_progress_match",
                        "test_make_guess_char_guesses_counter_match",
                        "test_make_guess_word_set_guesses_counter_to_max_on_no_match",
                        "test_make_guess_word_fills_word_progress_on_match",
                        "test_make_guess_char_already_guessed"
                    ],
                    "production_statements": 7,
                    "test_statements": 317
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button",
                        "test_setup_input_field",
                        "test_draw_game_frame",
                        "test_display_hanging_image",
                        "test_display_word",
                        "test_display_message",
                        "test_display_message_displayed",
                        "test_word_label_instance",
                        "test_setup_input_field_instance",
                        "test_word_label_instance_label",
                        "test_word_label_length",
                        "test_display_word_characteristics"
                    ],
                    "production_statements": 8,
                    "test_statements": 136
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.6206060606060606,
            "date": "2023-03-11 15:58:48+00:00"
        },
        "40b2c821dad601796665feb82223bfdb7e65a1d1": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 87,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 79,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 105,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view",
                        "test_has_play_method",
                        "test_has_exit_method",
                        "test_input_works"
                    ],
                    "production_statements": 9,
                    "test_statements": 54
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_has_target_word",
                        "test_has_word_progress",
                        "test_has_guessed_characters",
                        "test_has_max_guesses",
                        "test_has_guesses",
                        "test_start_game",
                        "test_game_over",
                        "test_victory",
                        "test_game_over_works",
                        "test_victory_works",
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative",
                        "test_generate_word_list",
                        "test_store_guessed_char_guessed_contains_letter",
                        "test_store_guessed_char_matched_contains_letter",
                        "test_store_guessed_char_matched_letter_count",
                        "test_store_guessed_char_matched_letter_count_none",
                        "test_store_guessed_char_matched_letter_index",
                        "test_make_guess_char_returns_word_progress_no_match",
                        "test_make_guess_char_increments_guesses_counter_no_match",
                        "test_make_guess_char_returns_updated_word_progress_match",
                        "test_make_guess_char_guesses_counter_match",
                        "test_make_guess_word_set_guesses_counter_to_max_on_no_match",
                        "test_make_guess_word_fills_word_progress_on_match",
                        "test_make_guess_char_already_guessed"
                    ],
                    "production_statements": 7,
                    "test_statements": 317
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button",
                        "test_setup_input_field",
                        "test_draw_game_frame",
                        "test_display_hanging_image",
                        "test_display_word",
                        "test_display_message",
                        "test_display_message_displayed",
                        "test_word_label_instance",
                        "test_setup_input_field_instance",
                        "test_word_label_instance_label",
                        "test_word_label_length",
                        "test_display_word_characteristics"
                    ],
                    "production_statements": 8,
                    "test_statements": 136
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.6131736526946108,
            "date": "2023-03-17 14:18:01+01:00"
        },
        "7af417f916f6d3628b322d2d6d96a9e7b6348e6c": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 93,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 80,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 105,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view",
                        "test_has_play_method",
                        "test_has_exit_method",
                        "test_has_victory_method",
                        "test_has_game_over_method",
                        "test_input_works"
                    ],
                    "production_statements": 9,
                    "test_statements": 68
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_has_target_word",
                        "test_has_word_progress",
                        "test_has_guessed_characters",
                        "test_has_max_guesses",
                        "test_has_guesses",
                        "test_start_game",
                        "test_game_over",
                        "test_victory",
                        "test_game_over_works",
                        "test_victory_works",
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative",
                        "test_generate_word_list",
                        "test_store_guessed_char_guessed_contains_letter",
                        "test_store_guessed_char_matched_contains_letter",
                        "test_store_guessed_char_matched_letter_count",
                        "test_store_guessed_char_matched_letter_count_none",
                        "test_store_guessed_char_matched_letter_index",
                        "test_make_guess_char_returns_word_progress_no_match",
                        "test_make_guess_char_increments_guesses_counter_no_match",
                        "test_make_guess_char_returns_updated_word_progress_match",
                        "test_make_guess_char_guesses_counter_match",
                        "test_make_guess_word_set_guesses_counter_to_max_on_no_match",
                        "test_make_guess_word_fills_word_progress_on_match",
                        "test_make_guess_char_already_guessed"
                    ],
                    "production_statements": 7,
                    "test_statements": 317
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button",
                        "test_setup_input_field",
                        "test_draw_game_frame",
                        "test_display_hanging_image",
                        "test_display_word",
                        "test_display_message",
                        "test_display_message_displayed",
                        "test_word_label_instance",
                        "test_setup_input_field_instance",
                        "test_word_label_instance_label",
                        "test_word_label_length",
                        "test_display_word_characteristics"
                    ],
                    "production_statements": 8,
                    "test_statements": 136
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.6217494089834515,
            "date": "2023-03-17 14:23:47+01:00"
        },
        "760f4f130751909c91877a7b4b4578deb09f84d5": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 87,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 79,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 105,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view",
                        "test_has_play_method",
                        "test_has_exit_method",
                        "test_input_works"
                    ],
                    "production_statements": 9,
                    "test_statements": 54
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_has_target_word",
                        "test_has_word_progress",
                        "test_has_guessed_characters",
                        "test_has_max_guesses",
                        "test_has_guesses",
                        "test_start_game",
                        "test_game_over",
                        "test_victory",
                        "test_game_over_works",
                        "test_victory_works",
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative",
                        "test_generate_word_list",
                        "test_store_guessed_char_guessed_contains_letter",
                        "test_store_guessed_char_matched_contains_letter",
                        "test_store_guessed_char_matched_letter_count",
                        "test_store_guessed_char_matched_letter_count_none",
                        "test_store_guessed_char_matched_letter_index",
                        "test_make_guess_char_returns_word_progress_no_match",
                        "test_make_guess_char_increments_guesses_counter_no_match",
                        "test_make_guess_char_returns_updated_word_progress_match",
                        "test_make_guess_char_guesses_counter_match",
                        "test_make_guess_word_set_guesses_counter_to_max_on_no_match",
                        "test_make_guess_word_fills_word_progress_on_match",
                        "test_make_guess_char_already_guessed"
                    ],
                    "production_statements": 7,
                    "test_statements": 317
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button",
                        "test_setup_input_field",
                        "test_draw_game_frame",
                        "test_display_hanging_image",
                        "test_display_word",
                        "test_display_message",
                        "test_display_message_displayed",
                        "test_word_label_instance",
                        "test_setup_input_field_instance",
                        "test_word_label_instance_label",
                        "test_word_label_length",
                        "test_display_word_characteristics"
                    ],
                    "production_statements": 8,
                    "test_statements": 136
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 0,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.624384236453202,
            "date": "2023-03-17 14:24:21+01:00"
        },
        "a2d73625ed44fa0732acc54525ec86e8eecbd214": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 87,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 79,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 105,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view",
                        "test_has_play_method",
                        "test_has_exit_method",
                        "test_input_works"
                    ],
                    "production_statements": 9,
                    "test_statements": 54
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_has_target_word",
                        "test_has_word_progress",
                        "test_has_guessed_characters",
                        "test_has_max_guesses",
                        "test_has_guesses",
                        "test_start_game",
                        "test_game_over",
                        "test_victory",
                        "test_game_over_works",
                        "test_victory_works",
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative",
                        "test_generate_word_list",
                        "test_store_guessed_char_guessed_contains_letter",
                        "test_store_guessed_char_matched_contains_letter",
                        "test_store_guessed_char_matched_letter_count",
                        "test_store_guessed_char_matched_letter_count_none",
                        "test_store_guessed_char_matched_letter_index",
                        "test_make_guess_char_returns_word_progress_no_match",
                        "test_make_guess_char_increments_guesses_counter_no_match",
                        "test_make_guess_char_returns_updated_word_progress_match",
                        "test_make_guess_char_guesses_counter_match",
                        "test_make_guess_word_set_guesses_counter_to_max_on_no_match",
                        "test_make_guess_word_fills_word_progress_on_match",
                        "test_make_guess_char_already_guessed"
                    ],
                    "production_statements": 7,
                    "test_statements": 317
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button",
                        "test_setup_input_field",
                        "test_draw_game_frame",
                        "test_display_hanging_image",
                        "test_display_word",
                        "test_display_message",
                        "test_display_message_displayed",
                        "test_word_label_instance",
                        "test_setup_input_field_instance",
                        "test_word_label_instance_label",
                        "test_word_label_length",
                        "test_display_word_characteristics"
                    ],
                    "production_statements": 8,
                    "test_statements": 136
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.6131736526946108,
            "date": "2023-03-17 13:25:43+00:00"
        },
        "bdff6b3d1e0c99481d904d5b5517e54817f70800": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 93,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 80,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 105,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view",
                        "test_has_play_method",
                        "test_has_exit_method",
                        "test_has_victory_method",
                        "test_has_game_over_method",
                        "test_input_works"
                    ],
                    "production_statements": 9,
                    "test_statements": 68
                },
                "\\TDD-Hangman\\tests\\test_hangman.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestPlaceholder"
                    ],
                    "pytest_functions": [
                        "test_tmp"
                    ],
                    "production_statements": 8,
                    "test_statements": 5
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_has_target_word",
                        "test_has_word_progress",
                        "test_has_guessed_characters",
                        "test_has_max_guesses",
                        "test_has_guesses",
                        "test_start_game",
                        "test_game_over",
                        "test_victory",
                        "test_game_over_works",
                        "test_victory_works",
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative",
                        "test_generate_word_list",
                        "test_store_guessed_char_guessed_contains_letter",
                        "test_store_guessed_char_matched_contains_letter",
                        "test_store_guessed_char_matched_letter_count",
                        "test_store_guessed_char_matched_letter_count_none",
                        "test_store_guessed_char_matched_letter_index",
                        "test_make_guess_char_returns_word_progress_no_match",
                        "test_make_guess_char_increments_guesses_counter_no_match",
                        "test_make_guess_char_returns_updated_word_progress_match",
                        "test_make_guess_char_guesses_counter_match",
                        "test_make_guess_word_set_guesses_counter_to_max_on_no_match",
                        "test_make_guess_word_fills_word_progress_on_match",
                        "test_make_guess_char_already_guessed"
                    ],
                    "production_statements": 7,
                    "test_statements": 317
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button",
                        "test_setup_input_field",
                        "test_draw_game_frame",
                        "test_display_hanging_image",
                        "test_display_word",
                        "test_display_message",
                        "test_display_message_displayed",
                        "test_word_label_instance",
                        "test_setup_input_field_instance",
                        "test_word_label_instance_label",
                        "test_word_label_length",
                        "test_display_word_characteristics"
                    ],
                    "production_statements": 8,
                    "test_statements": 136
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.6144859813084113,
            "date": "2023-03-17 13:30:15+00:00"
        },
        "eeaad1fc7b0bcb6cab428311a433144501c94ce9": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 93,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 80,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 105,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view",
                        "test_has_play_method",
                        "test_has_exit_method",
                        "test_has_victory_method",
                        "test_has_game_over_method",
                        "test_input_works"
                    ],
                    "production_statements": 9,
                    "test_statements": 68
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_has_target_word",
                        "test_has_word_progress",
                        "test_has_guessed_characters",
                        "test_has_max_guesses",
                        "test_has_guesses",
                        "test_start_game",
                        "test_game_over",
                        "test_victory",
                        "test_game_over_works",
                        "test_victory_works",
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative",
                        "test_generate_word_list",
                        "test_store_guessed_char_guessed_contains_letter",
                        "test_store_guessed_char_matched_contains_letter",
                        "test_store_guessed_char_matched_letter_count",
                        "test_store_guessed_char_matched_letter_count_none",
                        "test_store_guessed_char_matched_letter_index",
                        "test_make_guess_char_returns_word_progress_no_match",
                        "test_make_guess_char_increments_guesses_counter_no_match",
                        "test_make_guess_char_returns_updated_word_progress_match",
                        "test_make_guess_char_guesses_counter_match",
                        "test_make_guess_word_set_guesses_counter_to_max_on_no_match",
                        "test_make_guess_word_fills_word_progress_on_match",
                        "test_make_guess_char_already_guessed"
                    ],
                    "production_statements": 7,
                    "test_statements": 317
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button",
                        "test_setup_input_field",
                        "test_draw_game_frame",
                        "test_display_hanging_image",
                        "test_display_word",
                        "test_display_message",
                        "test_display_message_displayed",
                        "test_word_label_instance",
                        "test_setup_input_field_instance",
                        "test_word_label_instance_label",
                        "test_word_label_length",
                        "test_display_word_characteristics"
                    ],
                    "production_statements": 8,
                    "test_statements": 136
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.6180308422301305,
            "date": "2023-03-17 13:32:30+00:00"
        },
        "04dd31b4fb0ff9b2184807995fbae47f336e1930": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 93,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 82,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 105,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view",
                        "test_has_play_method",
                        "test_has_exit_method",
                        "test_has_victory_method",
                        "test_has_game_over_method",
                        "test_input_works"
                    ],
                    "production_statements": 9,
                    "test_statements": 68
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_has_target_word",
                        "test_has_word_progress",
                        "test_has_guessed_characters",
                        "test_has_max_guesses",
                        "test_has_guesses",
                        "test_start_game",
                        "test_game_over",
                        "test_victory",
                        "test_game_over_works",
                        "test_victory_works",
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative",
                        "test_generate_word_list",
                        "test_store_guessed_char_guessed_contains_letter",
                        "test_store_guessed_char_matched_contains_letter",
                        "test_store_guessed_char_matched_letter_count",
                        "test_store_guessed_char_matched_letter_count_none",
                        "test_store_guessed_char_matched_letter_index",
                        "test_make_guess_char_returns_word_progress_no_match",
                        "test_make_guess_char_increments_guesses_counter_no_match",
                        "test_make_guess_char_returns_updated_word_progress_match",
                        "test_make_guess_char_guesses_counter_match",
                        "test_make_guess_word_set_guesses_counter_to_max_on_no_match",
                        "test_make_guess_word_fills_word_progress_on_match",
                        "test_make_guess_char_already_guessed"
                    ],
                    "production_statements": 7,
                    "test_statements": 317
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button",
                        "test_setup_input_field",
                        "test_draw_game_frame",
                        "test_display_hanging_image",
                        "test_display_word",
                        "test_display_message",
                        "test_display_message_displayed",
                        "test_word_label_instance",
                        "test_setup_input_field_instance",
                        "test_word_label_instance_label",
                        "test_word_label_length",
                        "test_display_word_characteristics"
                    ],
                    "production_statements": 8,
                    "test_statements": 136
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.6165680473372781,
            "date": "2023-03-17 15:26:22+01:00"
        },
        "2737a55e5a015bcbc962bb789218d2bdb3eff0e1": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 93,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 82,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 105,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view",
                        "test_has_play_method",
                        "test_has_exit_method",
                        "test_has_victory_method",
                        "test_has_game_over_method",
                        "test_input_works"
                    ],
                    "production_statements": 9,
                    "test_statements": 68
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_has_target_word",
                        "test_has_word_progress",
                        "test_has_guessed_characters",
                        "test_has_max_guesses",
                        "test_has_guesses",
                        "test_start_game",
                        "test_game_over",
                        "test_victory",
                        "test_game_over_works",
                        "test_victory_works",
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative",
                        "test_generate_word_list",
                        "test_store_guessed_char_guessed_contains_letter",
                        "test_store_guessed_char_matched_contains_letter",
                        "test_store_guessed_char_matched_letter_count",
                        "test_store_guessed_char_matched_letter_count_none",
                        "test_store_guessed_char_matched_letter_index",
                        "test_make_guess_char_returns_word_progress_no_match",
                        "test_make_guess_char_increments_guesses_counter_no_match",
                        "test_make_guess_char_returns_updated_word_progress_match",
                        "test_make_guess_char_guesses_counter_match",
                        "test_make_guess_word_set_guesses_counter_to_max_on_no_match",
                        "test_make_guess_word_fills_word_progress_on_match",
                        "test_make_guess_char_already_guessed"
                    ],
                    "production_statements": 7,
                    "test_statements": 317
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button",
                        "test_setup_input_field",
                        "test_draw_game_frame",
                        "test_display_hanging_image",
                        "test_display_word",
                        "test_display_message",
                        "test_display_message_displayed",
                        "test_word_label_instance",
                        "test_setup_input_field_instance",
                        "test_word_label_instance_label",
                        "test_word_label_length",
                        "test_display_word_characteristics"
                    ],
                    "production_statements": 8,
                    "test_statements": 136
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.6165680473372781,
            "date": "2023-03-17 14:33:07+00:00"
        },
        "7bb2856dc5c3472bf08cce2b097631933bf2f8cc": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 93,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 82,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 109,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view",
                        "test_has_play_method",
                        "test_has_exit_method",
                        "test_has_victory_method",
                        "test_has_game_over_method",
                        "test_input_works"
                    ],
                    "production_statements": 9,
                    "test_statements": 68
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_has_target_word",
                        "test_has_word_progress",
                        "test_has_guessed_characters",
                        "test_has_max_guesses",
                        "test_has_guesses",
                        "test_start_game",
                        "test_game_over",
                        "test_victory",
                        "test_game_over_works",
                        "test_victory_works",
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative",
                        "test_generate_word_list",
                        "test_store_guessed_char_guessed_contains_letter",
                        "test_store_guessed_char_matched_contains_letter",
                        "test_store_guessed_char_matched_letter_count",
                        "test_store_guessed_char_matched_letter_count_none",
                        "test_store_guessed_char_matched_letter_index",
                        "test_make_guess_char_returns_word_progress_no_match",
                        "test_make_guess_char_increments_guesses_counter_no_match",
                        "test_make_guess_char_returns_updated_word_progress_match",
                        "test_make_guess_char_guesses_counter_match",
                        "test_make_guess_word_set_guesses_counter_to_max_on_no_match",
                        "test_make_guess_word_fills_word_progress_on_match",
                        "test_make_guess_char_already_guessed"
                    ],
                    "production_statements": 7,
                    "test_statements": 317
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button",
                        "test_setup_input_field",
                        "test_draw_game_frame",
                        "test_display_hanging_image",
                        "test_display_word",
                        "test_display_message",
                        "test_display_message_displayed",
                        "test_word_label_instance",
                        "test_setup_input_field_instance",
                        "test_word_label_instance_label",
                        "test_word_label_length",
                        "test_display_word_characteristics"
                    ],
                    "production_statements": 8,
                    "test_statements": 136
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.6136631330977621,
            "date": "2023-03-17 15:44:59+01:00"
        },
        "3e76c78d7132fc8ec40a4b305ce79909f5858d3b": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 93,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 80,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 105,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view",
                        "test_has_play_method",
                        "test_has_exit_method",
                        "test_has_victory_method",
                        "test_has_game_over_method",
                        "test_input_works"
                    ],
                    "production_statements": 9,
                    "test_statements": 71
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_has_target_word",
                        "test_has_word_progress",
                        "test_has_guessed_characters",
                        "test_has_max_guesses",
                        "test_has_guesses",
                        "test_start_game",
                        "test_game_over",
                        "test_victory",
                        "test_game_over_works",
                        "test_victory_works",
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative",
                        "test_generate_word_list",
                        "test_store_guessed_char_guessed_contains_letter",
                        "test_store_guessed_char_matched_contains_letter",
                        "test_store_guessed_char_matched_letter_count",
                        "test_store_guessed_char_matched_letter_count_none",
                        "test_store_guessed_char_matched_letter_index",
                        "test_make_guess_char_returns_word_progress_no_match",
                        "test_make_guess_char_increments_guesses_counter_no_match",
                        "test_make_guess_char_returns_updated_word_progress_match",
                        "test_make_guess_char_guesses_counter_match",
                        "test_make_guess_word_set_guesses_counter_to_max_on_no_match",
                        "test_make_guess_word_fills_word_progress_on_match",
                        "test_make_guess_char_already_guessed"
                    ],
                    "production_statements": 7,
                    "test_statements": 309
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button",
                        "test_setup_input_field",
                        "test_draw_game_frame",
                        "test_display_hanging_image",
                        "test_display_word",
                        "test_display_message",
                        "test_display_message_displayed",
                        "test_word_label_instance",
                        "test_setup_input_field_instance",
                        "test_word_label_instance_label",
                        "test_word_label_length",
                        "test_display_word_characteristics"
                    ],
                    "production_statements": 8,
                    "test_statements": 144
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.6193853427895981,
            "date": "2023-03-17 16:19:52+01:00"
        },
        "bb6ab25d69edf6771908dd0e1bf6dd21c635af49": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 93,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 82,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 109,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view",
                        "test_has_play_method",
                        "test_has_exit_method",
                        "test_has_victory_method",
                        "test_has_game_over_method",
                        "test_input_works"
                    ],
                    "production_statements": 9,
                    "test_statements": 68
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_has_target_word",
                        "test_has_word_progress",
                        "test_has_guessed_characters",
                        "test_has_max_guesses",
                        "test_has_guesses",
                        "test_start_game",
                        "test_game_over",
                        "test_victory",
                        "test_game_over_works",
                        "test_victory_works",
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative",
                        "test_generate_word_list",
                        "test_store_guessed_char_guessed_contains_letter",
                        "test_store_guessed_char_matched_contains_letter",
                        "test_store_guessed_char_matched_letter_count",
                        "test_store_guessed_char_matched_letter_count_none",
                        "test_store_guessed_char_matched_letter_index",
                        "test_make_guess_char_returns_word_progress_no_match",
                        "test_make_guess_char_increments_guesses_counter_no_match",
                        "test_make_guess_char_returns_updated_word_progress_match",
                        "test_make_guess_char_guesses_counter_match",
                        "test_make_guess_word_set_guesses_counter_to_max_on_no_match",
                        "test_make_guess_word_fills_word_progress_on_match",
                        "test_make_guess_char_already_guessed"
                    ],
                    "production_statements": 7,
                    "test_statements": 317
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button",
                        "test_setup_input_field",
                        "test_draw_game_frame",
                        "test_display_hanging_image",
                        "test_display_word",
                        "test_display_message",
                        "test_display_message_displayed",
                        "test_word_label_instance",
                        "test_setup_input_field_instance",
                        "test_word_label_instance_label",
                        "test_word_label_length",
                        "test_display_word_characteristics"
                    ],
                    "production_statements": 8,
                    "test_statements": 136
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.6136631330977621,
            "date": "2023-03-17 15:21:36+00:00"
        },
        "b2bd9fef0ab3c31cad2abb48e1a641288e8e1cbe": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 93,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 82,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 109,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view",
                        "test_has_play_method",
                        "test_has_exit_method",
                        "test_has_victory_method",
                        "test_has_game_over_method",
                        "test_input_works"
                    ],
                    "production_statements": 9,
                    "test_statements": 71
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_has_target_word",
                        "test_has_word_progress",
                        "test_has_guessed_characters",
                        "test_has_max_guesses",
                        "test_has_guesses",
                        "test_start_game",
                        "test_game_over",
                        "test_victory",
                        "test_game_over_works",
                        "test_victory_works",
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative",
                        "test_generate_word_list",
                        "test_store_guessed_char_guessed_contains_letter",
                        "test_store_guessed_char_matched_contains_letter",
                        "test_store_guessed_char_matched_letter_count",
                        "test_store_guessed_char_matched_letter_count_none",
                        "test_store_guessed_char_matched_letter_index",
                        "test_make_guess_char_returns_word_progress_no_match",
                        "test_make_guess_char_increments_guesses_counter_no_match",
                        "test_make_guess_char_returns_updated_word_progress_match",
                        "test_make_guess_char_guesses_counter_match",
                        "test_make_guess_word_set_guesses_counter_to_max_on_no_match",
                        "test_make_guess_word_fills_word_progress_on_match",
                        "test_make_guess_char_already_guessed"
                    ],
                    "production_statements": 7,
                    "test_statements": 309
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button",
                        "test_setup_input_field",
                        "test_draw_game_frame",
                        "test_display_hanging_image",
                        "test_display_word",
                        "test_display_message",
                        "test_display_message_displayed",
                        "test_word_label_instance",
                        "test_setup_input_field_instance",
                        "test_word_label_instance_label",
                        "test_word_label_length",
                        "test_display_word_characteristics"
                    ],
                    "production_statements": 8,
                    "test_statements": 144
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.6150234741784038,
            "date": "2023-03-17 15:34:31+00:00"
        },
        "aea7f5b0e1bc20ca3ed33fda6ca5d02037d5bc7b": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 93,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 86,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 112,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 9,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view",
                        "test_has_play_method",
                        "test_has_exit_method",
                        "test_has_victory_method",
                        "test_has_game_over_method",
                        "test_input_works"
                    ],
                    "production_statements": 9,
                    "test_statements": 71
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_has_target_word",
                        "test_has_word_progress",
                        "test_has_guessed_characters",
                        "test_has_max_guesses",
                        "test_has_guesses",
                        "test_start_game",
                        "test_game_over",
                        "test_victory",
                        "test_game_over_works",
                        "test_victory_works",
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative",
                        "test_generate_word_list",
                        "test_store_guessed_char_guessed_contains_letter",
                        "test_store_guessed_char_matched_contains_letter",
                        "test_store_guessed_char_matched_letter_count",
                        "test_store_guessed_char_matched_letter_count_none",
                        "test_store_guessed_char_matched_letter_index",
                        "test_make_guess_char_returns_word_progress_no_match",
                        "test_make_guess_char_increments_guesses_counter_no_match",
                        "test_make_guess_char_returns_updated_word_progress_match",
                        "test_make_guess_char_guesses_counter_match",
                        "test_make_guess_word_set_guesses_counter_to_max_on_no_match",
                        "test_make_guess_word_fills_word_progress_on_match",
                        "test_make_guess_char_already_guessed"
                    ],
                    "production_statements": 7,
                    "test_statements": 309
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button",
                        "test_setup_input_field",
                        "test_draw_game_frame",
                        "test_display_hanging_image",
                        "test_display_word",
                        "test_display_message",
                        "test_display_message_displayed",
                        "test_word_label_instance",
                        "test_setup_input_field_instance",
                        "test_word_label_instance_label",
                        "test_word_label_length",
                        "test_display_word_characteristics"
                    ],
                    "production_statements": 8,
                    "test_statements": 144
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.6036866359447005,
            "date": "2023-03-19 14:39:41+01:00"
        },
        "ff76ec8dc7ba80d0ed2dc5b214a3cb5598677a35": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 93,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 86,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 112,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 9,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view",
                        "test_has_play_method",
                        "test_has_exit_method",
                        "test_has_victory_method",
                        "test_has_game_over_method",
                        "test_input_works"
                    ],
                    "production_statements": 9,
                    "test_statements": 71
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_has_target_word",
                        "test_has_word_progress",
                        "test_has_guessed_characters",
                        "test_has_max_guesses",
                        "test_has_guesses",
                        "test_start_game",
                        "test_game_over",
                        "test_victory",
                        "test_game_over_works",
                        "test_victory_works",
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative",
                        "test_generate_word_list",
                        "test_store_guessed_char_guessed_contains_letter",
                        "test_store_guessed_char_matched_contains_letter",
                        "test_store_guessed_char_matched_letter_count",
                        "test_store_guessed_char_matched_letter_count_none",
                        "test_store_guessed_char_matched_letter_index",
                        "test_make_guess_char_returns_word_progress_no_match",
                        "test_make_guess_char_increments_guesses_counter_no_match",
                        "test_make_guess_char_returns_updated_word_progress_match",
                        "test_make_guess_char_guesses_counter_match",
                        "test_make_guess_word_set_guesses_counter_to_max_on_no_match",
                        "test_make_guess_word_fills_word_progress_on_match",
                        "test_make_guess_char_already_guessed"
                    ],
                    "production_statements": 7,
                    "test_statements": 309
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button",
                        "test_setup_input_field",
                        "test_draw_game_frame",
                        "test_display_hanging_image",
                        "test_display_word",
                        "test_display_message",
                        "test_display_message_displayed",
                        "test_word_label_instance",
                        "test_setup_input_field_instance",
                        "test_word_label_instance_label",
                        "test_word_label_length",
                        "test_display_word_characteristics"
                    ],
                    "production_statements": 8,
                    "test_statements": 144
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.6036866359447005,
            "date": "2023-03-19 13:46:37+00:00"
        },
        "696e99cf012017c33ffa4aad92a5ff701bee11a1": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 93,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 86,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 112,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 9,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view",
                        "test_has_play_method",
                        "test_has_exit_method",
                        "test_has_victory_method",
                        "test_has_game_over_method",
                        "test_input_works"
                    ],
                    "production_statements": 9,
                    "test_statements": 71
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_has_target_word",
                        "test_has_word_progress",
                        "test_has_guessed_characters",
                        "test_has_max_guesses",
                        "test_has_guesses",
                        "test_start_game",
                        "test_game_over",
                        "test_victory",
                        "test_game_over_works",
                        "test_victory_works",
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative",
                        "test_generate_word_list",
                        "test_store_guessed_char_guessed_contains_letter",
                        "test_store_guessed_char_matched_contains_letter",
                        "test_store_guessed_char_matched_letter_count",
                        "test_store_guessed_char_matched_letter_count_none",
                        "test_store_guessed_char_matched_letter_index",
                        "test_make_guess_char_returns_word_progress_no_match",
                        "test_make_guess_char_increments_guesses_counter_no_match",
                        "test_make_guess_char_returns_updated_word_progress_match",
                        "test_make_guess_char_guesses_counter_match",
                        "test_make_guess_word_set_guesses_counter_to_max_on_no_match",
                        "test_make_guess_word_fills_word_progress_on_match",
                        "test_make_guess_char_already_guessed"
                    ],
                    "production_statements": 7,
                    "test_statements": 309
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button",
                        "test_setup_input_field",
                        "test_draw_game_frame",
                        "test_display_hanging_image",
                        "test_display_word",
                        "test_display_message",
                        "test_display_message_displayed",
                        "test_word_label_instance",
                        "test_setup_input_field_instance",
                        "test_word_label_instance_label",
                        "test_word_label_length",
                        "test_display_word_characteristics"
                    ],
                    "production_statements": 8,
                    "test_statements": 144
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.6036866359447005,
            "date": "2023-03-19 15:01:14+01:00"
        },
        "296dd4a9d56a256f88e8d5b23b2c5a500c471d97": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 93,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 86,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 112,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 9,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view",
                        "test_has_play_method",
                        "test_has_exit_method",
                        "test_has_victory_method",
                        "test_has_game_over_method",
                        "test_input_works"
                    ],
                    "production_statements": 9,
                    "test_statements": 71
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_has_target_word",
                        "test_has_word_progress",
                        "test_has_guessed_characters",
                        "test_has_max_guesses",
                        "test_has_guesses",
                        "test_start_game",
                        "test_game_over",
                        "test_victory",
                        "test_game_over_works",
                        "test_victory_works",
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative",
                        "test_generate_word_list",
                        "test_store_guessed_char_guessed_contains_letter",
                        "test_store_guessed_char_matched_contains_letter",
                        "test_store_guessed_char_matched_letter_count",
                        "test_store_guessed_char_matched_letter_count_none",
                        "test_store_guessed_char_matched_letter_index",
                        "test_make_guess_char_returns_word_progress_no_match",
                        "test_make_guess_char_increments_guesses_counter_no_match",
                        "test_make_guess_char_returns_updated_word_progress_match",
                        "test_make_guess_char_guesses_counter_match",
                        "test_make_guess_word_set_guesses_counter_to_max_on_no_match",
                        "test_make_guess_word_fills_word_progress_on_match",
                        "test_make_guess_char_already_guessed"
                    ],
                    "production_statements": 7,
                    "test_statements": 309
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button",
                        "test_setup_input_field",
                        "test_draw_game_frame",
                        "test_display_hanging_image",
                        "test_display_word",
                        "test_display_message",
                        "test_display_message_displayed",
                        "test_word_label_instance",
                        "test_setup_input_field_instance",
                        "test_word_label_instance_label",
                        "test_word_label_length",
                        "test_display_word_characteristics"
                    ],
                    "production_statements": 8,
                    "test_statements": 144
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.6036866359447005,
            "date": "2023-03-19 14:02:51+00:00"
        },
        "0f3f675e3a82a5b5de894259c7776dadd666e0cc": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 93,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 86,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 112,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 9,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view",
                        "test_has_play_method",
                        "test_has_exit_method",
                        "test_has_victory_method",
                        "test_has_game_over_method",
                        "test_input_works"
                    ],
                    "production_statements": 9,
                    "test_statements": 71
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_has_target_word",
                        "test_has_word_progress",
                        "test_has_guessed_characters",
                        "test_has_max_guesses",
                        "test_has_guesses",
                        "test_start_game",
                        "test_game_over",
                        "test_victory",
                        "test_game_over_works",
                        "test_victory_works",
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative",
                        "test_generate_word_list",
                        "test_store_guessed_char_guessed_contains_letter",
                        "test_store_guessed_char_matched_contains_letter",
                        "test_store_guessed_char_matched_letter_count",
                        "test_store_guessed_char_matched_letter_count_none",
                        "test_store_guessed_char_matched_letter_index",
                        "test_make_guess_char_returns_word_progress_no_match",
                        "test_make_guess_char_increments_guesses_counter_no_match",
                        "test_make_guess_char_returns_updated_word_progress_match",
                        "test_make_guess_char_guesses_counter_match",
                        "test_make_guess_word_set_guesses_counter_to_max_on_no_match",
                        "test_make_guess_word_fills_word_progress_on_match",
                        "test_make_guess_char_already_guessed"
                    ],
                    "production_statements": 7,
                    "test_statements": 309
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button",
                        "test_setup_input_field",
                        "test_draw_game_frame",
                        "test_display_hanging_image",
                        "test_display_word",
                        "test_display_message",
                        "test_display_message_displayed",
                        "test_word_label_instance",
                        "test_setup_input_field_instance",
                        "test_word_label_instance_label",
                        "test_word_label_length",
                        "test_display_word_characteristics"
                    ],
                    "production_statements": 8,
                    "test_statements": 144
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.6036866359447005,
            "date": "2023-03-19 15:15:06+01:00"
        },
        "8d05bf19f5986e99e4e58537243ba00225566b6c": {
            "files": {
                "\\TDD-Hangman\\src\\hangman.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 10,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\Controller.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 93,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\controllers\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\GameEngine.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 86,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\models\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\other\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\GUI.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 112,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\src\\views\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 9,
                    "test_statements": 0
                },
                "\\TDD-Hangman\\tests\\test_controller.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestController"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_has_model",
                        "test_has_view",
                        "test_has_play_method",
                        "test_has_exit_method",
                        "test_has_victory_method",
                        "test_has_game_over_method",
                        "test_input_works"
                    ],
                    "production_statements": 9,
                    "test_statements": 71
                },
                "\\TDD-Hangman\\tests\\test_model.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGameEngine"
                    ],
                    "pytest_functions": [
                        "test_has_target_word",
                        "test_has_word_progress",
                        "test_has_guessed_characters",
                        "test_has_max_guesses",
                        "test_has_guesses",
                        "test_start_game",
                        "test_game_over",
                        "test_victory",
                        "test_game_over_works",
                        "test_victory_works",
                        "test_get_word_returns_word",
                        "test_get_word_length_nonempty_non_negative",
                        "test_instance",
                        "test_find_char_index",
                        "test_find_char_index_returns_single_match",
                        "test_find_char_index_returns_multiple_matches",
                        "test_find_char_index_returns_empty_list",
                        "test_char_in_target_word",
                        "test_char_in_target_word_correct",
                        "test_char_in_target_word_incorrect",
                        "test_word_matches_target_word",
                        "test_word_matches_target_word_correct",
                        "test_word_matches_target_word_incorrect",
                        "test_char_validation_positive",
                        "test_char_validation_negative",
                        "test_word_validation_positive",
                        "test_number_word_validation_negative",
                        "test_short_word_validation_negative",
                        "test_generate_word_list",
                        "test_store_guessed_char_guessed_contains_letter",
                        "test_store_guessed_char_matched_contains_letter",
                        "test_store_guessed_char_matched_letter_count",
                        "test_store_guessed_char_matched_letter_count_none",
                        "test_store_guessed_char_matched_letter_index",
                        "test_make_guess_char_returns_word_progress_no_match",
                        "test_make_guess_char_increments_guesses_counter_no_match",
                        "test_make_guess_char_returns_updated_word_progress_match",
                        "test_make_guess_char_guesses_counter_match",
                        "test_make_guess_word_set_guesses_counter_to_max_on_no_match",
                        "test_make_guess_word_fills_word_progress_on_match",
                        "test_make_guess_char_already_guessed"
                    ],
                    "production_statements": 7,
                    "test_statements": 309
                },
                "\\TDD-Hangman\\tests\\test_view.py": {
                    "imports": [
                        "unittest"
                    ],
                    "unittest_classes": [
                        "TestGUI"
                    ],
                    "pytest_functions": [
                        "test_instance",
                        "test_start",
                        "test_destroy",
                        "test_setup_frames",
                        "test_setup_buttons",
                        "test_bind_play_button",
                        "test_bind_exit_button",
                        "test_setup_input_field",
                        "test_draw_game_frame",
                        "test_display_hanging_image",
                        "test_display_word",
                        "test_display_message",
                        "test_display_message_displayed",
                        "test_word_label_instance",
                        "test_setup_input_field_instance",
                        "test_word_label_instance_label",
                        "test_word_label_length",
                        "test_display_word_characteristics"
                    ],
                    "production_statements": 8,
                    "test_statements": 144
                },
                "\\TDD-Hangman\\tests\\__init__.py": {
                    "imports": [],
                    "unittest_classes": [],
                    "pytest_functions": [],
                    "production_statements": 2,
                    "test_statements": 0
                }
            },
            "test-to-code-ratio": 0.6036866359447005,
            "date": "2023-03-19 14:17:42+00:00"
        }
    }
}